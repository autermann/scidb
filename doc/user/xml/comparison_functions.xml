<?xml version="1.0" encoding="UTF-8"?>
<!-- This document was created with Syntext Serna Free. -->
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"docbookV4.5/docbookx.dtd">
<refentry>
  <refnamediv>
    <refname>Comparison functions</refname>

    <refpurpose>Compare scalar values</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <synopsis><command>SELECT</command> <replaceable>expression1</replaceable> <command>FROM</command> <replaceable>array</replaceable> <command>WHERE</command> <replaceable>expression2</replaceable>;</synopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>Summary</title>

    <para>These functions compare scalar values. Comparison operations result
    in a value of 1 (TRUE), 0 (FALSE), or NULL.</para>

    <informaltable frame="all">
      <?dbfo keep-together="auto" ?>

      <tgroup cols="4">
        <colspec align="left" colname="c1" colwidth="10*"/>

        <colspec colname="c2" colwidth="20*"/>

        <colspec colname="c3" colwidth="20*"/>

        <colspec align="left" colname="cgen1" colwidth="30*"/>

        <thead>
          <row>
            <entry>Function Name</entry>

            <entry>Description</entry>

            <entry>Syntax</entry>

            <entry>Datatypes</entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry>&lt;</entry>

            <entry>Less than</entry>

            <entry>scalar &lt; scalar</entry>

            <entry>bool, char, datetime, datetimetz, double, float, int8,
            int16, int32, int64, uint8, uint16, uint32, uint64, string</entry>
          </row>

          <row>
            <entry>&lt;=</entry>

            <entry>Less than or equal</entry>

            <entry>scalar*scalar</entry>

            <entry>bool, char, datetime, datetimetz, double, float, int8,
            int16, int32, int64, uint8, uint16, uint32, uint64, string</entry>
          </row>

          <row>
            <entry>&lt;&gt;</entry>

            <entry>Not equal</entry>

            <entry>scalar &lt;&gt; scalar</entry>

            <entry>bool, char, datetime, datetimetz, double, float, int8,
            int16, int32, int64, uint8, uint16, uint32, uint64, string</entry>
          </row>

          <row>
            <entry>=</entry>

            <entry>Equal</entry>

            <entry><para>scalar = scalar</para></entry>

            <entry>bool, char, datetime, datetimetz, double, float, int8,
            int16, int32, int64, uint8, uint16, uint32, uint64, string</entry>
          </row>

          <row>
            <entry>&gt;</entry>

            <entry>Greater than</entry>

            <entry>scalar &gt; scalar</entry>

            <entry>bool, char, datetime, datetimetz, double, float, int8,
            int16, int32, int64, uint8, uint16, uint32, uint64, string</entry>
          </row>

          <row>
            <entry>&gt;=</entry>

            <entry>Greater than or equal</entry>

            <entry>scalar &gt;= scalar</entry>

            <entry>bool, char, datetime, datetimetz, double, float, int8,
            int16, int32, int64, uint8, uint16, uint32, uint64, string</entry>
          </row>

          <row>
            <entry>iif</entry>

            <entry>Inline if</entry>

            <entry>iif(expression, if_true, otherwise)</entry>

            <entry>bool, char, datetime, datetimetz, double, float, int8,
            int16, int32, int64, uint8, uint16, uint32, uint64, string</entry>
          </row>

          <row>
            <entry>is_nan</entry>

            <entry/>

            <entry>is_nan(scalar)</entry>

            <entry>double</entry>
          </row>

          <row>
            <entry>is_null</entry>

            <entry/>

            <entry>is_null(scalar)</entry>

            <entry>void</entry>
          </row>

          <row>
            <entry>not</entry>

            <entry>Boolean NOT</entry>

            <entry>not(scalar)</entry>

            <entry>bool</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </refsect1>
</refentry>
