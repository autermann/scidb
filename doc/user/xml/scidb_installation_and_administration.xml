<?xml version="1.0" encoding="UTF-8"?>
<!-- This document was created with Syntext Serna Free. -->
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"docbookV4.5/docbookx.dtd">
<chapter remap="h1">
  <title>SciDB Installation and Administration</title>

  <para>SciDB is supported on the Ubuntu 12.04 platform.</para>

  <para>A complete SciDB installation is a multi-database environment that
  includes the core SciDB engine, Postgres, the open source SQL database
  engine which is used for system catalog data, as well as ScaLAPACK/MPI which
  is used as a computational engine for dense linear algebra.</para>

  <sect1 remap="h2" xml:id="InstallingSciDB">
    <title>Terminology</title>

    <para>The following terms are used to describe the SciDB installation and
    administration process:<variablelist>
        <varlistentry>
          <term>
            <emphasis>Single server</emphasis>
          </term>

          <listitem>
            <para>A configuration that consists of a single machine with a
            processor that may contain multiple cores, memory and attached
            storage. A single server may be virtual or physical.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
            <emphasis>Virtual server</emphasis>
          </term>

          <listitem>
            <para>A server that shares hardware rather than having dedicated
            hardware.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
            <emphasis>Coordinator server</emphasis>
          </term>

          <listitem>
            <para>In a configuration that has multiple servers, exactly one
            server functions as the coordinator, and contains the
            <emphasis>coordinator instance</emphasis>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
            <emphasis>SciDB Instance</emphasis>
          </term>

          <listitem>
            <para>An independent SciDB group of processes, that is, a single
            running SciDB. There may be a many-to-one mapping between SciDB
            instances and a server.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
            <emphasis>Coordinator instance</emphasis>
          </term>

          <listitem>
            <para>A SciDB instance that resides on the coordinator server.
            There is a single coordinator instance for a SciDB cluster. A
            coordinator instance coordinates query activity in addition to
            participating in query execution.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
            <emphasis>Worker instance</emphasis>
          </term>

          <listitem>
            <para>A SciDB instance that only participates in query
            execution.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
            <emphasis>Cluster</emphasis>
          </term>

          <listitem>
            <para>A group of one or more single servers connected by TCP/IP,
            working together as a single system. A cluster can be a private
            grid or a public cloud.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
            <emphasis>SciDB Cluster</emphasis>
          </term>

          <listitem>
            <para>A collection of SciDB instances (one coordinator and zero or
            more worker instances) form a SciDB cluster.</para>
          </listitem>
        </varlistentry>
      </variablelist></para>
  </sect1>

  <sect1 remap="h2" xml:id="PlatformPrep">
     

    <title>Preparing the Platform</title>

     Before installing SciDB, the following steps are required to prepare a cluster for running SciDB. Many of these steps must be executed as the Linux 'root' account (creating the scidb account, preparing the system catalog, configuring a local data directory for use by SciDB, installing SciDB software packages). 

    <sect2 remap="h3" xml:id="LinuxUserAccount">
      <title><emphasis role="bold">scidb</emphasis> Account</title>

      <note>This step must be performed by root, or an account with equivalent
      administrative privileges. The scidb account must be available on all
      servers in the cluster.</note>

      <para>First, you need to create the<emphasis role="bold">
      scidb</emphasis> account. All SciDB processes as well as data and log
      files are created and owned by this ID. On a cluster, each server must
      have this account. This is also the account that initializes, starts,
      and stops the SciDB cluster.</para>

      <para>The scidb user account must have password-less SSH access
      configured between the coordinator server and all servers in the SciDB
      cluster. How to configure this access is described later in the
      chapter.</para>
    </sect2>

     

    <sect2 remap="h3" xml:id="DataDir">
      <title>Configure Storage</title>

      <note>This action must be performed by the root account on each server
      in the cluster. Once created the base path should be owned by the
      <emphasis role="bold">scidb</emphasis> account.</note>

      <para>On each server, select a location on the local file system to
      place the data directory for each instance. This must be accessible via
      the same path name on every server.</para>

      <para>The recommended configuration is 1 disk and 4 CPU cores for each
      SciDB instance. This is easily achieved in a virtual server
      configuration. For physical server configuration, please explore the
      SciDB forum at <ulink
      url="www.scidb.org/forum">www.scidb.org/forum</ulink> for guidance on
      creating an optimal configuration.</para>
    </sect2>

    <sect2 remap="h3" xml:id="RemoteExecutionConfigurationssh">
      <title>Remote Execution Configuration (ssh)</title>

      <note>This step is only required if you are setting up a cluster
      environment, and can be skipped for single-server installations. This
      step must be performed by the scidb user account.</note>

      <para>SciDB uses <code>ssh</code> for execution of management commands
      such as start and stop within a cluster. This is why the <emphasis
      role="bold">scidb</emphasis> user account should have password-less
      <code>ssh</code> access from the coordinator to the workers and from the
      coordinator to itself.</para>

      <para>There are several methods to configure password-less
      <code>SSH</code> between servers. We recommend the following simple
      method.</para>

      <orderedlist>
        <listitem><para>Create a key:<programlisting>ssh-keygen</programlisting></para>
        By default, this creates a key file with a public/private key pair in
        ~/.ssh/id_rsa.pub and ~/.ssh/id_rsa. Optionally, a key file name may
        be specified. If a non-default filename is used for the key pair, it
        must be listed in the SciDB config file for use by scidb.py.
        <programlisting>
scidb@monolith1:~/.ssh$ ssh-keygen 
Generating public/private rsa key pair.
Enter file in which to save the key (/home/scidb/.ssh/id_rsa): scidb_rsa
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in scidb_rsa.
Your public key has been saved in scidb_rsa.pub.
...
</programlisting></listitem>

        <listitem>
          <para>Copy the key to the localhost (or coordinator) and to each
          worker to authorize ssh clients connecting to it: <programlisting>
ssh-copy-id -i ~/.ssh/scidb_rsa.pub scidb@worker
ssh-copy-id -i ~/.ssh/scidb_rsa.pub scidb@localhost
</programlisting></para>
        </listitem>

        <listitem>
          <para>Login to remote host. Note that no password is required
          now:<programlisting>ssh scidb@worker</programlisting></para>
        </listitem>
      </orderedlist>
    </sect2>

     
  </sect1>

  <sect1 remap="h2" xml:id="PackageInstall">
    <title>Package Installation</title>

    <sect2 remap="h3" xml:id="InstallSciDBfrombinarypackage">
      <title>Install SciDB from binary package</title>

      <note>This step must be performed by the root account. In a cluster,
      this step must be performed on all servers.</note>

      <para>We currently provide the following packages for Ubuntu
      (.deb).</para>

      <itemizedlist>
        <listitem>The <code>scidb</code> package contains the server
        binaries.</listitem>

        <listitem>
          <para>The <code>libscidbclient</code> and
          <code>libscidbclient-python</code> packages contain the SciDB client
          library and the SciDB connector for python applications.</para>
        </listitem>

        <listitem>
          <para>The <code>scidb-plugins </code>package contains plugins that
          can be added to SciDB to extend its capabilities. This package
          contains the <code>dense_linear_algebra</code> plugin.</para>
        </listitem>

        <listitem>The <code>scidb-utils</code> package contains SciDB server
        utilities.</listitem>

        <listitem>The <code>scidb-dev</code> contains development header files
        for developers creating SciDB extensions (types, operators, and
        aggregates).</listitem>

        <listitem>The <code>scidb-doc</code> package contains the SciDB User
        Guide document.</listitem>
      </itemizedlist>

      <para>This section describes how to download and install SciDB using
      pre-built binary packages.</para>

      <orderedlist>
        <listitem>
          <para>Add SciDB's GPG public key. <programlisting>
wget -O- http://downloads.paradigm4.com/apt/key |sudo apt-key add -
</programlisting></para>
        </listitem>

        <listitem>
          <para>Add SciDB's APT repository to the apt configuration file
          <code>/etc/apt/sources.list.d/scidb.list</code>. <programlisting>
deb  http://downloads.paradigm4.com/apt/  precise/cheshire/
deb-src  http://downloads.paradigm4.com/apt/ precise/cheshire/
</programlisting></para>
        </listitem>

        <listitem>
          <para>Update APT index and install SciDB. If you want the default
          SciDB installation with all packages installed, you can install the
          scidb-all (or scidb-all-coord) metapackage. This package includes
          all of the standard SciDB packages.<programlisting>sudo apt-get update
sudo apt-cache search scidb
sudo apt-get install scidb-all-coord # On the coordinator server
sudo apt-get install scidb-all # On all other servers
sudo apt-get source scidb # Download the source</programlisting></para>
        </listitem>
      </orderedlist>

      <para>If you want the default SciDB installation with all packages
      installed, you can install the scidb-all (worker) or scidb-all-coord
      (coordinator) metapackage. These packages include all of the standard
      SciDB packages required for a complete installation.</para>

      <note>
        <para>The only difference between the scidb-all and scidb-all-coord
        packages is that scidb-all-coord contains Postgres. If you already
        have Postgres on your coordinator server, there is no need to install
        the scidb-all-coord package.</para>
      </note>
    </sect2>

    <sect2 remap="h3" xml:id="PostgresInstallationandConfiguration">
      <title>System Catalog Setup</title>

      <para>SciDB relies on Postgres as the system catalog.</para>

      <para>Note the following:<itemizedlist>
          <listitem>
            <para>SciDB requires Postgres 8.4. This version is typically
            available on most Linux platforms. If your platform provides
            multiple versions of Postgres, make sure that version 8.4 is
            running and using port 5432.</para>
          </listitem>

          <listitem>
            <para>The installation and configuration of Postgres must be
            performed by root, or an account with equivalent administrative
            privileges.</para>
          </listitem>

          <listitem>
            <para>You install and configure Postgres on the coordinator server
            only.</para>
          </listitem>
        </itemizedlist></para>

      <para>By default, Postgres is configured to allow only local access via
      Unix-domain sockets. In a cluster environment, the Postgres database
      server needs to be configured to allow access from other instances in
      the cluster. To do this:</para>

      <orderedlist>
        <listitem>
          <para>Configure Postgres to use 'trust' authentication for local and
          remote connections. To do this, modify the
          <literal>pg_hba.conf</literal> file (usually at
          <literal>/etc/postgresql/8.4/main/</literal> or <literal>
          /var/lib/pgsql/data/</literal>) and include the following settings.
          <programlisting>
local   all      all                      trust
host    all      all     10.0.0.1/8       trust
</programlisting></para>

          <para>This configuration setting causes Postgres to use 'trust'
          authentication for all local and remote connections from instances
          within the 10.0.0.1/8 subnet. Replace the subnet/mask with the
          correct one for your cluster.</para>
        </listitem>

        <listitem>
          <para>You might need to set the <literal>postgresql.conf</literal>
          file to have it listen on the relevant port. If you are running a
          cluster with multiple servers, you will also need to modify the
          <literal>postgresql.conf</literal> file to allow connections from
          other instances in the cluster.</para>

          <programlisting>
# - Connection Settings -
listen_addresses = '*'
port = 5432
</programlisting>
        </listitem>

        <listitem>
          <para>Restart Postgres.</para>

          <programlisting>
sudo /etc/init.d/postgresql restart
</programlisting>
        </listitem>

        <listitem>
          <para>The last step, after you have configured Postgres, is to add
          it to Linux system services. This means that Postgres will be
          started automatically on system reboot: <programlisting>sudo /sbin/chkconfig --add postgresql</programlisting></para>
        </listitem>
      </orderedlist>

      <warning>
        <para>This Postgres configuration might pose security issues. When
        authentication is set to trust PostgreSQL assumes that anyone who can
        connect to the server is authorized to access the database. To make a
        more secure installation, you can list specific host IP addresses,
        user names, and role mappings.</para>

        <para>You can read more on the security details of Postgres
        client-authentication in the Postgres documentation at <ulink
        url="http://www.postgresql.org/docs/8.3/static/client-authentication.html"/>.</para>
      </warning>

      <para>You can verify that a PostgreSQL instance is running on the
      coordinator with the <literal>status</literal> command: <programlisting>
sudo /etc/init.d/postgresql status
</programlisting></para>
    </sect2>

    <sect2 remap="h3" xml:id="EnvironmentVariables2">
      <title>Set Environment Variables</title>

      <note>
        <para>You set the environment variables on the coordinator server
        only.</para>
      </note>

      <para>The following variables should be set in the scidb user's
      environment. <programlisting>
export SCIDB_VER=12.10
export PATH=/opt/scidb/$SCIDB_VER/bin:/opt/scidb/$SCIDB_VER/share/scidb:$PATH
export LD_LIBRARY_PATH=/opt/scidb/$SCIDB_VER/lib:$LD_LIBRARY_PATH
</programlisting></para>
    </sect2>
  </sect1>

  <sect1 remap="h2" xml:id="ConfiguringSciDB">
    <title>Configuring SciDB</title>

    <para>This section introduces the SciDB config.ini and shows how to
    configure SciDB prior to initialization (usually
    <literal>/opt/scidb/12.10/etc/config.ini</literal>). Logging configuration
    is also described.</para>

    <sect2>
      <title>SciDB Configuration File</title>

      <note>
        <para>The configuration file resides on the coordinator server
        only.</para>
      </note>

      <para>The standard location of the SciDB configuration file is
      <literal>/opt/scidb/12.10/etc/config.ini</literal>.</para>

      <para>The configuration 'test1' below is an example of the configuration
      for a single-instance system (coordinator only):<programlisting>[test1]
server-0=localhost,0
db_user=test1user
db_passwd=test1passwd
install_root=/opt/scidb/12.10
metadata=/opt/scidb/12.10/share/scidb/meta.sql
pluginsdir=/opt/scidb/12.10/lib/scidb/plugins
logconf=/opt/scidb/12.10/share/scidb/log4cxx.properties
base-path=/home/scidb/data
base-port=1239
interface=eth0
network-buffer=1024
mem-array-threshold=1024
smgr-cache-size=1024
execution-threads=16
result-prefetch-queue-size=4
result-prefetch-threads=4
chunk-segment-size=100485760
</programlisting></para>
    </sect2>

    <sect2>
      <title>Cluster Configuration Example</title>

      <para>The following SciDB cluster configuration is called 'monolith.'
      This cluster consists of eight identical virtual servers with the
      following characteristics:<itemizedlist>
          <listitem>
            <para>x86_64 6-core processor</para>
          </listitem>

          <listitem>
            <para>8 GB of RAM</para>
          </listitem>

          <listitem>
            <para>1 TB direct attached storage</para>
          </listitem>

          <listitem>
            <para>1Gbps Ethernet</para>
          </listitem>

          <listitem>
            <para>Linux OS from the list of supported distributions.</para>
          </listitem>
        </itemizedlist></para>

      <para>The following configuration file applies to such a cluster called
      <code>monolith</code> and is explained in the following section.
      <programlisting>
[monolith]
# server-id=IP, number of worker instances
server-0=10.0.20.231,0
server-1=10.0.20.232,1
server-2=10.0.20.233,1
server-3=10.0.20.234,1
server-4=10.0.20.235,1
server-5=10.0.20.236,1
server-6=10.0.20.237,1
server-7=10.0.20.238,1
db_user=monolith
db_password=monolith
install_root=/opt/scidb/12.10
metadata=/opt/scidb/12.10/share/scidb/meta.sql
pluginsdir=/opt/scidb/12.10/lib/scidb/plugins
logconf=/opt/scidb/log4cxx.properties.trace
base-path=/data/monolith_data
base-port=1239
interface=eth0</programlisting></para>

      <para>The install package contains a sample configuration file,
      <literal>sample_config.ini</literal> with examples which must be
      customized and copied to <literal>config.ini</literal>.</para>

      <para>The following table describes the basic configuration file
      settings:</para>

      <informaltable frame="all">
        <tgroup cols="2">
          <colspec colname="c1" colwidth="20*"/>

          <colspec colname="c2" colwidth="60*"/>

          <tbody>
            <row>
              <entry nameend="c2" namest="c1">
                <para>
                  <emphasis role="bold">
                    <emphasis role="bold">Basic Configuration</emphasis>
                  </emphasis>
                </para>
              </entry>
            </row>

            <row>
              <entry>
                <para>
                  <emphasis role="bold">
                    <emphasis role="bold">Key</emphasis>
                  </emphasis>
                </para>
              </entry>

              <entry>
                <para>
                  <emphasis role="bold">
                    <emphasis role="bold">Value</emphasis>
                  </emphasis>
                </para>
              </entry>
            </row>

            <row>
              <entry>
                <para>Cluster name</para>
              </entry>

              <entry>
                <para>Name of the SciDB cluster. The cluster name must appear
                as a section heading in the config.ini file, e.g.,<emphasis>
                [cluster1]</emphasis></para>
              </entry>
            </row>

            <row>
              <entry>
                <para>server-N, w</para>
              </entry>

              <entry>
                <para>The host name or IP address of server N, where N = 0, 1,
                2, ..., followed by a comma, followed by the number of worker
                instances <code>w</code> to launch on the server. The
                coordinator is always on server-0 and launches at least one
                instance that serves as database coordinator.</para>
              </entry>
            </row>

            <row>
              <entry>
                <para>db_user</para>
              </entry>

              <entry>
                <para>Username to use in the catalog connection string. This
                example uses<emphasis> test1user</emphasis></para>
              </entry>
            </row>

            <row>
              <entry>
                <para>db_passwd</para>
              </entry>

              <entry>
                <para>Password to use in the catalog connection string. This
                example uses<emphasis> test1passwd</emphasis></para>
              </entry>
            </row>

            <row>
              <entry>
                <para>install_root</para>
              </entry>

              <entry>
                <para>Full path to the SciDB installation directory.</para>
              </entry>
            </row>

            <row>
              <entry>
                <para>metadata</para>
              </entry>

              <entry>
                <para>Full path to the SciDB metadata definition file.</para>
              </entry>
            </row>

            <row>
              <entry>
                <para>pluginsdir</para>
              </entry>

              <entry>
                <para>Full path to the SciDB plugins directory that contains
                all server plugins.</para>
              </entry>
            </row>

            <row>
              <entry>
                <para>logconf</para>
              </entry>

              <entry>
                <para>Full path to the <emphasis role="bold">log4xx</emphasis>
                logging configuration file.</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>

      <para>The following table describes the cluster configuration file
      contents and how to set them:</para>

      <informaltable frame="all">
        <tgroup cols="2">
          <colspec colname="c1" colwidth="20*"/>

          <colspec colname="c2" colwidth="60*"/>

          <tbody>
            <row>
              <entry nameend="c2" namest="c1">
                <para>
                  <emphasis role="bold">
                    <emphasis role="bold">Cluster Configuration</emphasis>
                  </emphasis>
                </para>
              </entry>
            </row>

            <row>
              <entry>
                <para>
                  <emphasis role="bold">
                    <emphasis role="bold">Key</emphasis>
                  </emphasis>
                </para>
              </entry>

              <entry>
                <para>
                  <emphasis role="bold">
                    <emphasis role="bold">Value</emphasis>
                  </emphasis>
                </para>
              </entry>
            </row>

            <row>
              <entry>
                <para>base-path</para>
              </entry>

              <entry>
                <para>The root data directory for each SciDB instance. Each
                SciDB instance uses an enumerated data directory below the
                base-path. The <code>list('instances')</code> command shows
                all instances and their data directories for a running SciDB
                cluster.</para>
              </entry>
            </row>

            <row>
              <entry>
                <para>base-port (optional)</para>
              </entry>

              <entry>
                <para>Base port number. Connections to the coordinator (and
                therefore to the system) are via this port number, while
                worker instances communicate via base-port + instance number.
                The default port number for the SciDB coordinator is
                1239.</para>
              </entry>
            </row>

            <row>
              <entry>
                <para>interface</para>
              </entry>

              <entry>
                <para>Ethernet interface that SciDB uses.</para>
              </entry>
            </row>

            <row>
              <entry>
                <para>pg-port (optional)</para>
              </entry>

              <entry>
                <para>The listening port of Postgres -- the port on which
                Postgres accepts incoming connections. Default: 5432.</para>
              </entry>
            </row>

            <row>
              <entry>
                <para>ssh-port (optional)</para>
              </entry>

              <entry>
                <para>The port that ssh uses for communications within the
                cluster. Default:22.</para>
              </entry>
            </row>

            <row>
              <entry>
                <para>key-file-list (optional)</para>
              </entry>

              <entry>
                <para>Comma-separated list of filenames that include keys for
                ssh authentication. Default: /home/scidb/.ssh/id_rsa and
                id_dsa.</para>
              </entry>
            </row>

            <row>
              <entry>
                <para>tmp-path (optional)</para>
              </entry>

              <entry>
                <para>Full path to temporary directory. Default is a directory
                within <code>base-path.</code></para>
              </entry>
            </row>

            <row>
              <entry>
                <para>no-watchdog (optional)</para>
              </entry>

              <entry>
                <para>Set this to true if you do not want automatic restart of
                the SciDB server on a software crash. Default: false.</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>

      <para>The following table describes the configuration file elements for
      tuning your system performance:</para>

      <informaltable frame="all">
        <tgroup cols="2">
          <colspec colname="c1" colwidth="30*"/>

          <colspec colname="c2" colwidth="60*"/>

          <tbody>
            <row>
              <entry nameend="c2" namest="c1">
                <para>
                  <emphasis role="bold">
                    <emphasis role="bold">Performance Configuration</emphasis>
                  </emphasis>
                </para>
              </entry>
            </row>

            <row>
              <entry>
                <para>
                  <emphasis role="bold">
                    <emphasis role="bold">Key</emphasis>
                  </emphasis>
                </para>
              </entry>

              <entry>
                <para>
                  <emphasis role="bold">
                    <emphasis role="bold">Value</emphasis>
                  </emphasis>
                </para>
              </entry>
            </row>

            <row>
              <entry>
                <para>save-ram (optional)</para>
              </entry>

              <entry>
                <para>'True', 'true', 'on' or 'On' will enable this option.
                'Off' by default. This setting, when true, is a hint to write
                temporary data directly to disk files without caching them,
                thereby saving memory at the cost of performance. Default:
                False or 'Off'.</para>
              </entry>
            </row>

            <row>
              <entry>
                <para>mem-array-threshold (optional)</para>
              </entry>

              <entry>
                <para>Maximum size in MB of temporary data to be cached in
                memory, before writing to temporary disk files. Default: 1024
                MB. Note that even if save-ram is true, some parts of the
                system may still ignore the hint, and use the cache.</para>
              </entry>
            </row>

            <row>
              <entry>
                <para>smgr-cache-size (optional)</para>
              </entry>

              <entry>
                <para>Size of memory in MB allocated to the global shared
                cache of array chunks. Only chunks belonging to stored arrays
                are written to this cache. Default: 256 MB</para>
              </entry>
            </row>

            <row>
              <entry>
                <para>max-memory-limit (optional)</para>
              </entry>

              <entry>
                <para>The hard-limit maximum amount of memory in MB that the
                SciDB instance shall be allowed to allocate. If the instance
                requests more memory from the operating system the allocation
                will fail with an exception. Default: No limit.</para>
              </entry>
            </row>

            <row>
              <entry>
                <para>merge-sort-buffer (optional)</para>
              </entry>

              <entry>
                <para>Size of memory buffer used in merge sort, in MB.
                Default: 512 MB.</para>
              </entry>
            </row>

            <row>
              <entry>
                <para>chunk-segment-size (optional)</para>
              </entry>

              <entry>
                <para>Size of a storage segment in bytes. Set to a nonzero
                value to enable reuse of storage from removed arrays. If this
                number is set to a nonzero value, it must be large enough to
                contain the largest chunk of the array. If set to zero, no
                space reuse or storage reclamation is done. Default value:
                85MB. Maximum size: 2,147,483,647 B (= 2GB).</para>
              </entry>
            </row>

            <row>
              <entry>
                <para>execution-threads (optional)</para>
              </entry>

              <entry>
                <para>Size of thread pool available for query execution.
                Shared pool of threads used by all queries for network IO and
                some query execution tasks. Default: 4.</para>
              </entry>
            </row>

            <row>
              <entry>
                <para>operator-threads (optional)</para>
              </entry>

              <entry>
                <para>Number of threads used per operator per query. Limit the
                number of threads allocated per (multithreaded) operator in a
                query. If operator-threads is unspecified, SciDB automatically
                detects the number of CPU cores and uses that value. If you
                are running multiple instances on each server,
                operator-threads must be set lower than the number of CPU
                cores since multiple SciDB instances share the same set of CPU
                cores. Default: Number of CPU cores.</para>
              </entry>
            </row>

            <row>
              <entry>
                <para>result-prefetch-threads (optional)</para>
              </entry>

              <entry>
                <para>Per-query threads available for prefetch. Default:
                4.</para>
              </entry>
            </row>

            <row>
              <entry>
                <para>result-prefetch-queue-size (optional)</para>
              </entry>

              <entry>
                <para>Per-query number of result chunks to prefetch. Default:
                4.</para>
              </entry>
            </row>

            <row>
              <entry>
                <para>small-memalloc-size (optional)</para>
              </entry>

              <entry>
                <para>Small allocation threshold size in bytes for glibc
                malloc. All memory allocations larger than this size will be
                treated as "large" and pass through to Linux mmap.
                M_MMAP_THRESHOLD setting for malloc. Default: 268,435,456
                bytes (256 MB)</para>
              </entry>
            </row>

            <row>
              <entry>
                <para>large-memalloc-limit (optional)</para>
              </entry>

              <entry>
                <para>Threshold limit on the maximum number of simultaneous
                large allocations for glibc malloc. M_MMAP_MAX setting for
                malloc. Default: 65,536.</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>

      <para>In the example above, <code>db_user</code> is set to<emphasis>
      test1user</emphasis> and <code>db_passwd</code> is set to
      <emphasis>test1passwd</emphasis>.</para>
    </sect2>

    <sect2 remap="h3" xml:id="LoggingConfiguration">
      <title>Logging Configuration</title>

      <para>SciDB uses Apache's log4cxx (<ulink
      url="http://logging.apache.org/log4cxx/">http://logging.apache.org/log4cxx/</ulink>).</para>

      <para>The logging configuration file, specified by the
      <literal>logconf</literal> variable in <literal>config.ini</literal>,
      contains the following Apache log4cxx logger settings:<programlisting>###
# Levels: TRACE &lt; DEBUG &lt; INFO &lt; WARN &lt; ERROR &lt; FATAL
###

log4j.rootLogger=DEBUG, file

log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.File=scidb.log
log4j.appender.file.MaxFileSize=10000KB
log4j.appender.file.MaxBackupIndex=2
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d [%t] [%-5p]: %m%n</programlisting></para>
    </sect2>
  </sect1>

  <sect1 remap="h2" xml:id="InitializingandStartingSciDB">
    <title>Initializing and Starting SciDB</title>

    <sect2 remap="h3" xml:id="Thescidb.pyScript"><title>The scidb.py
    Script</title><para>To begin a SciDB session, use the
    <literal>scidb.py</literal> script. In a standard SciDB build, this script
    is located at:<programlisting>/opt/scidb/<replaceable>version.number</replaceable>/bin</programlisting></para><para>The
    syntax for the <literal>scidb.py</literal> script is: <programlisting>scidb.py <replaceable>command</replaceable> <replaceable>db</replaceable> <replaceable>conffile</replaceable></programlisting></para><para>The
    options for the <replaceable>command</replaceable> argument
    are:</para><informaltable frame="all">
        <tgroup cols="2">
          <colspec colname="c1" colwidth="30*"/>

          <colspec colname="c2" colwidth="50*"/>

          <tbody>
            <row>
              <entry>
                <para>
                  <code>init_syscat</code>
                </para>
              </entry>

              <entry>
                <para>Initialize the SciDB system catalog. <emphasis
                role="bold"> Warning</emphasis>: This will remove any existing
                SciDB arrays from the current namespace and recreate the
                system catalog entries for this database. This must be run as
                user 'root' or as user 'Postgres' since it requires
                administrative privileges to the Postgres database.</para>
              </entry>
            </row>

            <row>
              <entry>
                <para><code>initall</code> and
                <code>initall-force</code></para>
              </entry>

              <entry>
                <para>Initialize the SciDB instances. This initializes SciDB
                on coordinator and worker instances and register them in the
                system catalog. <emphasis role="bold"> Warning</emphasis>:
                This will delete all data and log files corresponding to these
                instances.</para>

                <para>initall-force forces initialization without prompting
                the user.</para>
              </entry>
            </row>

            <row>
              <entry>
                <para>
                  <code>startall</code>
                </para>
              </entry>

              <entry>
                <para>Start the SciDB database service.</para>
              </entry>
            </row>

            <row>
              <entry>
                <para>
                  <code>stopall</code>
                </para>
              </entry>

              <entry>
                <para>Stop the SciDB database service.</para>
              </entry>
            </row>

            <row>
              <entry>
                <para>
                  <code>status</code>
                </para>
              </entry>

              <entry>
                <para>Show the status of the SciDB service.</para>
              </entry>
            </row>

            <row>
              <entry>
                <para>
                  <code>dbginfo</code>
                </para>
              </entry>

              <entry>
                <para>Collect debugging information by getting all logs,
                cores, and install files.</para>
              </entry>
            </row>

            <row>
              <entry>
                <para>
                  <code>dbginfo-lt</code>
                </para>
              </entry>

              <entry>
                <para>Collect only stack and log information for
                debugging.</para>
              </entry>
            </row>

            <row>
              <entry>
                <para>
                  <code>version</code>
                </para>
              </entry>

              <entry>
                <para>Display SciDB version number information.</para>
              </entry>
            </row>

            <row>
              <entry>
                <para>
                  <code>check-pids</code>
                </para>
              </entry>

              <entry>
                <para>List process IDs of SciDB on all instances.</para>
              </entry>
            </row>

            <row>
              <entry>
                <para>
                  <code>check-version</code>
                </para>
              </entry>

              <entry>
                <para>Display the SciDB version information on each instance.
                This is useful in verifying that all instances in the cluster
                are running the same version.</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable><para>The <replaceable>db</replaceable> argument is the
    name of the SciDB cluster you want to create or get information
    about.</para><para>The configuration file is set by default to
    <code>/opt/scidb/12.10/etc/config.ini</code>. If you want to use a custom
    configuration file for a particular SciDB cluster, use the
    <replaceable>conffile</replaceable> argument.</para><para>Run the
    following command to initialize SciDB on the server. If the SciDB user has
    sudo privileges, everything will be done automatically (otherwise see the
    previous section for additional Postgres configuration steps):
    </para><para> First, initialize the system catalog database in Postgres.
    This must be done as user Postgres, therefore, this command must be run as
    user Postgres, or as superuser as follows. <programlisting>sudo -u postgres /opt/scidb/12.10/bin/scidb.py init_syscat test1</programlisting></para>
    The remainder of the commands are run as user 'scidb'. <para>
        <programlisting>scidb.py initall test1</programlisting>
      </para><warning>
        <para>This will reinitialize the SciDB database. Any arrays that you
        have created in previous SciDB sessions will be removed and
        corresponding storage files will be deleted.</para>
      </warning><para>To start the set of local SciDB instances specified in
    your config.ini file, use the following command: <programlisting>scidb.py startall test1</programlisting></para><para>This
    will report the status of the various instances:<programlisting>scidb.py status test1</programlisting></para><para>This
    will stop all SciDB instances:<programlisting>scidb.py stopall test1</programlisting></para></sect2>

    <sect2>
      <title>SciDB Logs</title>

      <para>SciDB logs are written to the file <literal>scidb.log</literal> in
      the appropriate directories for each instance:
      <replaceable>base-path</replaceable>/000/0 for the coordinator and
      <replaceable>base-path</replaceable>/<replaceable>M</replaceable>/<replaceable>N</replaceable>
      for the server <replaceable>M</replaceable> instance
      <replaceable>N</replaceable>. Consider an installation with four
      servers, S1, S2, S3, and S4, and 8 instances per server.<itemizedlist>
          <listitem>
            <para>S1 is the coordinator server, and contains 1 coordinator
            instance and 7 worker instances in the following directories:
            <replaceable>base-path</replaceable>/000/0,
            <replaceable>base-path</replaceable>/000/1,
            <replaceable>base-path</replaceable>/000/2, ...
            <replaceable>base-path</replaceable>/000/7</para>
          </listitem>

          <listitem>
            <para>S2 is server, and contains 8 worker instances in the
            following directories: <replaceable>base-path</replaceable>/001/1,
            <replaceable>base-path</replaceable>/001/2, ...
            <replaceable>base-path</replaceable>/001/8</para>
          </listitem>

          <listitem>
            <para>S3 is server, and contains 8 worker instances in the
            following directories: <replaceable>base-path</replaceable>/002/1,
            <replaceable>base-path</replaceable>/002/2, ...
            <replaceable>base-path</replaceable>/002/8</para>
          </listitem>

          <listitem>
            <para>S4 is server, and contains 8 worker instances in the
            following directories: <replaceable>base-path</replaceable>/003/1,
            <replaceable>base-path</replaceable>/003/2, ...
            <replaceable>base-path</replaceable>/003/8</para>
          </listitem>
        </itemizedlist></para>
    </sect2>
  </sect1>

  <sect1 remap="h2" xml:id="scidb_on_ec2">
    <title>SciDB on Amazon EC2</title>

    <para>Amazon Elastic Compute Cloud (EC2) is a central part of Amazon.com's
    cloud computing platform. A public Amazon Machine Image (AMI) from
    Paradigm4 is available on EC2 as
    <code>SciDB_12_10-Ubuntu-10_04-Sep-14-2012 (ami-80e950e9)</code>. This AMI
    has been pre-installed and pre-configured with release 12.10 of
    SciDB.</para>

    <note>
      <para>You need to have an Amazon Web Services account, and there is a
      small hourly fee associated with using the Amazon EC2 service.</para>
    </note>

    <orderedlist>
      <listitem>
        <para>Use Amazon Web Services (AWS) to create and set up a virtual
        Amazon Machine Instance. For details, see <ulink
        url="http://aws.amazon.com">http://aws.amazon.com</ulink>.</para>

        <para>You can use the <literal>ami-80e950e9</literal> image as a
        starting point.</para>
      </listitem>

      <listitem>
        <para>AWS provides a configuration wizard for creating your image. You
        should be able to accept most of the defaults. Some parameters to
        note:<itemizedlist>
            <listitem>
              <para>For the <emphasis role="bold">Availability
              Zone</emphasis>, we recommend that you choose
              <literal>us-east-1a</literal>.</para>
            </listitem>

            <listitem>
              <para>You should create a key pair if you do not already have
              one.</para>
            </listitem>

            <listitem>
              <para>You should create a security group that uses SSH.</para>
            </listitem>
          </itemizedlist></para>
      </listitem>

      <listitem>
        <para>Start your AMI and connect to it. On the details page for your
        AMI, not the URL. For example, if your image URL is e,
        ec2-23-20-246-232.compute-1.amazonaws.com, you could issue the
        following command in a terminal:<programlisting>ssh -i ~/.ssh/myKeyFile.pem -o StrictHostKeyChecking=no ubuntu@ec2-23-20-246-232.compute-1.amazonaws.com</programlisting></para>
      </listitem>

      <listitem>
        <para>Execute the following commands to initialize local
        storage:</para>

        <programlisting>./osinit.sh
./pginit.sh</programlisting>
      </listitem>

      <listitem>
        <para>Configure and refresh your SciDB installation as described earlier in this chapter under the Package Installation section.</para>
      </listitem>

      <listitem>
        <para>Login as user scidb (password scidb123) and execute the
        following script to initialize and start SciDB.</para>

        <programlisting>./dbinit.sh</programlisting>
      </listitem>
    </orderedlist>

    <para>Your SciDB installation is now ready to use. As user 'scidb', you
    can now load data, run queries and use your SciDB installation.</para>

    <programlisting>
scidb@ip-10-191-93-50:~$ iquery -aq "list('instances')"

No,name,port,instance_id,online_since,instance_path
0,"127.0.0.1",1239,0,"2012-09-12 18:52:28","/mnt/xldb/000/0"
1,"127.0.0.1",1240,1,"2012-09-12 18:52:28","/mnt/xldb/000/1"</programlisting>
  </sect1>
</chapter>
