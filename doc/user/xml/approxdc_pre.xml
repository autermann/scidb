<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"docbookV4.5/docbookx.dtd">
<refentry id="approxdcOperator">
  <refnamediv>
    <refname>approxdc</refname>

    <refpurpose><indexterm>
        <primary>approximate count</primary>
      </indexterm>Produces a result array containing approximate counts of the
    number of distinct values of an attribute.</refpurpose>

    <para><indexterm>
        <primary>deprecated</primary>

        <secondary>approxdc</secondary>
      </indexterm><emphasis role="bold">Deprecated.</emphasis> The
    <code>approxdc</code> operator may be removed in the future. Use the <link
    linkend="approxdcAgg">approxdc aggregate</link> instead.</para>
  </refnamediv>

  <refsynopsisdiv>
    <synopsis>approxdc(<replaceable>array</replaceable><optional>,<replaceable>attribute,dimension_1</replaceable>,<replaceable>dimension_2</replaceable>,...</optional>)</synopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>Summary</title>

    <para>The <code>approxdc</code> operator takes a set of values from an
    array attribute and returns an approximate count of the number of distinct
    values present.</para>

    <para>The result array contains the aggregation result as a new attribute.
    The name of this attribute is
    <literal><replaceable>inputAttribute</replaceable>_adc</literal> , where
    <replaceable>inputAttribute</replaceable> is the name of the attribute
    being aggregated on.</para>

    <para>If you do not specify an attribute, the first attribute is used, You
    can also specify one or more dimensions to group the results by
    dimension.</para>
  </refsect1>

  <refsect1>
    <title>Inputs</title>

    <para>The <literal>approxdc</literal> operator takes the following
    arguments:<itemizedlist>
        <listitem>
          <para><emphasis role="bold">array</emphasis>: A source array with
          one or more attributes and one or more dimensions.</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">attribute</emphasis>: Optional
          attribute. If no attribute is provided, the first attribute in the
          source array is used.</para>
        </listitem>

        <listitem>
          <para><emphasis
          role="bold">dimension_</emphasis><replaceable>n</replaceable>: An
          optional list of dimensions to group by.</para>
        </listitem>
      </itemizedlist></para>
  </refsect1>

  <refsect1>
    <title>Example</title>

    <informalexample>
      <para>This example finds the approximate number of distinct integers in
      an array.</para>

      <procedure>
        <step>
          <para>Create an array.<programlisting language="test">--afl create array counting &lt;val:int32&gt;
      [i=0:999,1000,0, j=0:999,1000,0];  --show-output=no</programlisting></para>
        </step>

        <step>
          <para>Store values from 0 to 999,999â€”one million distinct
          values.<programlisting language="test">--afl store(build(counting, (i * 1000) + j),counting); --show-output=no</programlisting></para>
        </step>

        <step>
          <para>Retrieve an approximate count of the number of distinct values
          in the array.<programlisting language="test">--afl aggregate(counting,approxdc(val));</programlisting>As
          you can see, the result, 997498, is within a few percent of the
          actual number of distinct values in the array.</para>
        </step>
      </procedure>

      <para>Now, let's store 2000 different values, and use approxdc to
      retrieve the actual number of distinct values.</para>

      <procedure>
        <step>
          <para>Take the mod 2000 to cut down the number of distinct
          values.<programlisting language="test">--afl store(build(counting, ((i * 1000) + j) % 2000),counting); --show-output=no</programlisting></para>
        </step>

        <step>
          <para>Retrieve an approximate count of the number of distinct values
          in the array.<programlisting language="test">--afl aggregate(counting,approxdc(val));</programlisting>In
          this case, notice that the result is exact.</para>
        </step>
      </procedure>
    </informalexample>
  </refsect1>
</refentry>
