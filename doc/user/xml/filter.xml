<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "docbookV4.5/docbookx.dtd" []>
<refentry>
  <refnamediv>
    <refname>filter</refname>
    <refpurpose>Select subset of data by boolean expression </refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis><command>SELECT</command> * <command>FROM</command> filter(<replaceable>array</replaceable>,<replaceable>expression</replaceable>);</synopsis>
<synopsis>filter(<replaceable>array</replaceable>,<replaceable>expression</replaceable>);</synopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Summary</title>
    <para>The filter operator filters out data in an array based on an expression over the attribute and dimension values.
The filter operator returns an array the with the same schema as the input array but marks all cells in the input that do not satisfy the predicate expression &apos;empty&apos;.
</para>
  </refsect1>
  <refsect1>
    <title>Example</title>
    <informalexample>
      <para>This example filters an array to remove outlying values.</para>
      <procedure>
        <step>
          <para>Create an array m4x4:<programlisting>CREATE ARRAY m4x4&lt;val:double&gt;[i=0:3,4,0,j=0:3,4,0];</programlisting></para>
        </step>
        <step>
          <para>Put values between 0 and 15 into the nondiagonal elements of m4x4 and values greater than 100 into the diagonal elements:<programlisting>store(build(m4x4,iif(i=j,100+i,i*4+j),m4x4);</programlisting><screen>[
[(100),(1),(2),(3)],
[(4),(101),(6),(7)],
[(8),(9),(102),(11)],
[(12),(13),(14),(103)]
]</screen></para>
        </step>
        <step>
          <para>Filter all values of 100 or greater out of m4x4:<programlisting>filter(m4x4,val&lt;100);</programlisting>This query outputs:<screen>[
[(),(1),(2),(3)],
[(4),(),(6),(7)],
[(8),(9),(),(11)],
[(12),(13),(14),()]
]</screen></para>
        </step>
      </procedure>
    </informalexample>
  </refsect1>
</refentry>
