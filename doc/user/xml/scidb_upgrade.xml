<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"docbookV4.5/docbookx.dtd" [
<!ENTITY % myents SYSTEM "scidb_ug.ent">
%myents;
]>
<section id="upgradingSciDB">
  <title>Upgrading SciDB</title>

  <para><indexterm>
      <primary>SciDB</primary>

      <secondary>upgrading</secondary>
    </indexterm><indexterm>
      <primary>upgrade SciDB</primary>
    </indexterm><indexterm>
      <primary>versions</primary>

      <secondary>SciDB</secondary>
    </indexterm>This section describes how to upgrade your version of SciDB.
  For this section, we use the following conventions:<itemizedlist>
      <listitem>
        <para>To represent your current version: <emphasis
        role="bold">scidbOldVersion</emphasis>.</para>
      </listitem>

      <listitem>
        <para>To represent the new version that you are installing: <emphasis
        role="bold">scidbNewVersion</emphasis>.</para>
      </listitem>
    </itemizedlist></para>

  <para>For example, if you are upgrading from 12.10 to
  &scidb_version;:<itemizedlist>
      <listitem>
        <para><emphasis role="bold">scidbOldVersion</emphasis> = 12.10</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">scidbNewVersion</emphasis> =
        &scidb_version;</para>
      </listitem>
    </itemizedlist></para>

  <para>If you are upgrading from a previous version of SciDB, make sure to
  perform the following tasks:</para>

  <procedure>
    <step>
      <para><emphasis role="bold">OPTIONAL.</emphasis> Backup your data. You
      need to repeat the procedure for each of your arrays. You should also
      note the schema for each array.<note>
          <para>If you are upgrading from 13.6 to 13.9, <emphasis
          role="bold">DO NOT USE THE OPAQUE METHOD TO BACKUP YOUR
          DATA</emphasis>. The changes to the system catalog for 13.9 make it
          impossible to load data files that were saved using the opaque
          method in 13.6 or earlier. You can perform the upgrade in place
          (that is, skip the backup step), or save your data using one of the
          other, available formats.</para>
        </note><orderedlist numeration="loweralpha">
          <listitem>
            <para>Use some format (CSV in this example) to save your first
            array.<programlisting>AQL% <command>SAVE</command> <replaceable>array-name</replaceable> <command>INTO</command> '<replaceable>saved_array</replaceable>' <command>AS</command> 'CSV'</programlisting>This
            saves the array data to <replaceable>saved_array</replaceable> to
            the coordinator instance, under your SciDB base path folder.
            Repeat this for each of your arrays.</para>
          </listitem>

          <listitem>
            <para>Note the schema for each of your arrays. You can use
            <literal>list('arrays')</literal> to get a list of your arrays and
            their schemas.<programlisting>AFL% list('arrays');</programlisting></para>
          </listitem>

          <listitem>
            <para>After saving, you should copy all the array files to a
            temporary folder. This ensures that the data will be available,
            even if you need to restore to change your database name or
            configuration of your SciDB instances.</para>
          </listitem>
        </orderedlist><note>
          <para>When saving arrays in this manner, only the latest version of
          the array is saved.</para>
        </note></para>
    </step>

    <step>
      <para>Stop SciDB, if it is running. From the SciDB user account, run the
      following command, where <emphasis role="bold">myDataBase</emphasis> is
      the name of your database:<programlisting>scidb.py stopall <emphasis
            role="bold">myDataBase</emphasis></programlisting></para>
    </step>

    <step>
      <para>If you want to keep your current SciDB configuration file, make a
      backup copy of it somewhere. By default, the file is in the following
      location:</para>

      <para><screen>opt/scidb/<emphasis role="bold">scidbOldVersion</emphasis>/etc/config.ini</screen></para>
    </step>

    <step>
      <para><emphasis role="bold">OPTIONAL.</emphasis> You can run multiple
      versions of SciDB, if you would like: for details, see <xref
      linkend="multipleSciDBs"/>. However, you can remove the previous version
      of SciDB if you only need to run the latest version of SciDB. If you
      installed to the default location, run the following command to remove
      the old version:<programlisting>sudo rm -Rf /opt/scidb/<emphasis
            role="bold">scidbOldVersion</emphasis>/</programlisting>For
      example, if your current version is 12.10, the above command removes the
      <literal>/opt/scidb/12.10 </literal>folder and all of its sub
      folders.</para>
    </step>

    <step>
      <para>To continue the upgrade process, proceed to <xref
      linkend="PackageInstall"/> to install the latest packages.</para>
    </step>

    <step>
      <para>Update your environment variables to refer to the new version of
      SciDB. Make sure to change your SciDB Version variable from its current
      value to the <emphasis role="bold">scidbNewVersion</emphasis>. Old
      version:<programlisting>export SCIDB_VER=<emphasis role="bold">scidbOldVersion</emphasis> # This should be set in your environment.</programlisting>Set
      to new version:<programlisting>export SCIDB_VER=<emphasis role="bold">scidbNewVersion</emphasis></programlisting>For
      details, see <xref linkend="environmentVariables"/>.</para>
    </step>

    <step>
      <para>Set up your configuration file.</para>

      <itemizedlist>
        <listitem>
          <para><emphasis role="bold">If you copied your existing config.ini
          file:</emphasis> make sure to change all occurrences of <emphasis
          role="bold">scidbOldVersion</emphasis>to <emphasis
          role="bold">scidbNewVersion</emphasis>. After you edit the file,
          copy it to the <literal>/opt/scidb/</literal><emphasis
          role="bold">scidbNewVersion</emphasis><literal>/etc/</literal>folder.</para>

          <para>For example, if you are upgrading to version is
          &scidb_version;, you would copy your file to the
          <literal>/opt/scidb/&scidb_version;/etc/</literal> folder.
          Typically, the following settings are affected:<programlisting>install_root=/opt/scidb/13.9
pluginsdir=/opt/scidb/13.9/lib/scidb/plugins
logconf=/opt/scidb/13.9/share/scidb/log4cxx.properties</programlisting></para>

          <para>Also, make sure to add the following setting to the
          configuration file:</para>

          <programlisting>enable-catalog-upgrade=true</programlisting>
        </listitem>

        <listitem>
          <para><emphasis role="bold">If you want to set up and use a new
          config.ini file: </emphasis>Proceed to <xref
          linkend="ConfiguringSciDB"/>.</para>
        </listitem>
      </itemizedlist>
    </step>

    <step>
      <para>Restart your SciDB database. Initialization is recommended to
      avoid errors that you would otherwise receive, based on
      incompatibilities between your your "old" database and your "new" SciDB
      version. Remember, though, that initializing the SciDB database destroys
      all the data in that database.<note>
          <para>If you get an error that says SciDB needs to upgrade the
          system catalog, and that the action failed, make sure to set the
          <code>enable-catalog-upgrade</code> parameter to <emphasis
          role="bold">true</emphasis>, as detailed in step 7 above.</para>
        </note></para>
    </step>

    <step>
      <para>After you have the new version of SciDB running, restore the data
      that you saved in step 1. For details, see <xref
      linkend="opaqueLoad"/>.</para>
    </step>
  </procedure>

  <note>
    <para>Utilities from different versions of SciDB are not inter-operable.
    For example, a &scidb_version; client cannot be used with a 13.1 SciDB
    server.</para>
  </note>
</section>
