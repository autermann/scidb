<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"docbookV4.5/docbookx.dtd" [
<!ENTITY % myents SYSTEM "scidb_ug.ent">
%myents;
]>
<section id="upgradingSciDB">
  <title>Upgrading SciDB</title>

  <para><indexterm>
      <primary>SciDB</primary>

      <secondary>upgrading</secondary>
    </indexterm><indexterm>
      <primary>upgrade SciDB</primary>
    </indexterm><indexterm>
      <primary>versions</primary>

      <secondary>SciDB</secondary>
    </indexterm>This section describes how to upgrade your version of SciDB.
  For this section, we use the following conventions:<itemizedlist>
      <listitem>
        <para>To represent your current version: <emphasis
        role="bold">scidbOldVersion</emphasis>.</para>
      </listitem>

      <listitem>
        <para>To represent the new version that you are installing: <emphasis
        role="bold">scidbNewVersion</emphasis>.</para>
      </listitem>
    </itemizedlist></para>

  <para>For example, if you are upgrading from 13.6 to
  &scidb_version;:<itemizedlist>
      <listitem>
        <para><emphasis role="bold">scidbOldVersion</emphasis> = 13.6</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">scidbNewVersion</emphasis> =
        &scidb_version;</para>
      </listitem>
    </itemizedlist></para>

  <para>If you are upgrading from a previous version of SciDB, make sure to
  perform the following tasks:</para>

  <procedure>
    <step>
      <para><emphasis role="bold">Prepare.</emphasis> Backup your data. You
      need to repeat the procedure for each of your arrays. You should also
      note the schema for each array.<orderedlist numeration="loweralpha">
          <listitem>
            <para>You can upgrade in place, but we recommend that you backup
            your data before upgrading. Use some format to save your first
            array. For fastest performance, consider performing a parallel
            save and then manually merging the saved CSV files collected from
            different instances. This example does a parallel save, using the
            lcsv+ format.<programlisting>AFL% save(<replaceable>array_name</replaceable>,'<replaceable>saved_array</replaceable>',-1,'lcsv+');</programlisting>This
            saves the array data to <replaceable>saved_array</replaceable> to
            all the instances, as the data is distributed, under your SciDB
            base path folder. Repeat this for each of your arrays. When
            reloading the data, you can feed the saved data through
            <command>loadcsv.py</command>.<note>
                <para>If you are upgrading from 13.6 to 13.12, <emphasis
                role="bold">DO NOT USE THE OPAQUE METHOD TO BACKUP YOUR
                DATA</emphasis>. The changes to the system catalog for 13.9
                made it impossible to load data files that were saved using
                the opaque method in 13.6 or earlier. You can perform the
                upgrade in place (that is, skip the backup step), or save your
                data using one of the other, available formats.</para>
              </note></para>
          </listitem>

          <listitem>
            <para>Note the schema for each of your arrays. You can use
            <literal>list('arrays')</literal> to get a list of your arrays and
            their schemas.<programlisting>AFL% list('arrays');</programlisting></para>
          </listitem>

          <listitem>
            <para>After saving, you should copy all the array files to a
            temporary folder. This ensures that the data will be available,
            even if you need to restore to change your database name or
            configuration of your SciDB instances.<note>
                <para>When saving arrays in this manner, only the latest
                version of the array is saved.</para>
              </note></para>
          </listitem>

          <listitem>
            <para>Stop SciDB.</para>
          </listitem>

          <listitem>
            <para>If you want to keep your current SciDB configuration file,
            make a backup copy of it somewhere. By default, the file is in the
            following location:<screen>opt/scidb/<emphasis role="bold">scidbOldVersion</emphasis>/etc/config.ini</screen></para>
          </listitem>

          <listitem>
            <para><emphasis role="bold">OPTIONAL.</emphasis> You can run
            multiple versions of SciDB, if you would like: for details, see
            <xref linkend="multipleSciDBs"/>. However, you can remove the
            previous version of SciDB if you only need to run the latest
            version of SciDB. If you installed to the default location, run
            the following command to remove the old version:<programlisting>sudo rm -Rf /opt/scidb/<emphasis
                  role="bold">scidbOldVersion</emphasis>/</programlisting></para>
          </listitem>
        </orderedlist></para>
    </step>

    <step>
      <para><emphasis role="bold">Upgrade. </emphasis>Perform the following
      steps to upgrade to the latest version of SciDB.<orderedlist
          numeration="loweralpha">
          <listitem>
            <para>Append the repository URL to the correct file:<itemizedlist>
                <listitem>
                  <para><emphasis role="bold">Ubuntu: </emphasis>Append the
                  following lines to the
                  <code>/etc/apt/sources.list.d/scidb.list</code>
                  file:<programlisting>deb  http://downloads.paradigm4.com/  ubuntu12.04/&scidb_version;
deb-src  http://downloads.paradigm4.com/  ubuntu12.04/&scidb_version;</programlisting></para>
                </listitem>

                <listitem>
                  <para><emphasis role="bold">CentOS / RHEL: </emphasis>Append
                  the following line to the
                  <code>/etc/yum.repos.d/scidb.repo</code>
                  file:<programlisting>baseurl=http://downloads.paradigm4.com/centos6.3/&scidb_version;/</programlisting></para>
                </listitem>
              </itemizedlist></para>
          </listitem>

          <listitem>
            <para>Run the update and install commands:<itemizedlist>
                <listitem>
                  <para><emphasis
                  role="bold">Ubuntu:</emphasis><programlisting>sudo apt-get update
sudo apt-get install scidb-&scidb_version;-all</programlisting></para>
                </listitem>

                <listitem>
                  <para><emphasis role="bold">CentOS /
                  RHEL:</emphasis><programlisting>sudo yum clean all
sudo yum update
sudo yum install scidb-&scidb_version;-all</programlisting></para>
                </listitem>
              </itemizedlist>For more details, see <xref
            linkend="PackageInstall"/>.</para>
          </listitem>

          <listitem>
            <para>Update your environment variables to refer to the new
            version of SciDB. Make sure to change your SciDB Version variable
            from its current value to the <emphasis
            role="bold">scidbNewVersion</emphasis>. Old
            version:<programlisting>export SCIDB_VER=<emphasis role="bold">scidbOldVersion</emphasis> # This should be set in your environment.</programlisting>Set
            to new version:<programlisting>export SCIDB_VER=&scidb_version;</programlisting>For
            details, see <xref linkend="environmentVariables"/>.</para>
          </listitem>

          <listitem>
            <para>Set up your configuration file, including setting the
            <code>enable-catalog-upgrade</code> parameter to
            <code>true</code>. Make sure to change all occurrences of
            <emphasis role="bold">scidbOldVersion</emphasis>to <emphasis
            role="bold">scidbNewVersion</emphasis>. After you edit the file,
            copy it to the
            <literal>/opt/scidb/&scidb_version;</literal><literal>/etc/</literal>folder.</para>

            <para>Typically, the following settings are
            affected:<programlisting>install_root=/opt/scidb/13.9
pluginsdir=/opt/scidb/13.9/lib/scidb/plugins
logconf=/opt/scidb/13.9/share/scidb/log4cxx.properties</programlisting></para>

            <para>Also, make sure to add the following setting to the
            configuration file:<programlisting>enable-catalog-upgrade=true</programlisting>For
            more details about the configuration file, see <xref
            linkend="ConfiguringSciDB"/>.</para>
          </listitem>

          <listitem>
            <para>Restart SciDB. Initialization is recommended to avoid errors
            that you would otherwise receive, based on incompatibilities
            between your your "old" database and your "new" SciDB version.
            Remember, though, that initializing the SciDB database destroys
            all the data in that database.<note>
                <para>If you get an error that says SciDB needs to upgrade the
                system catalog, and that the action failed, make sure to set
                the <code>enable-catalog-upgrade</code> parameter to <emphasis
                role="bold">true</emphasis>, as detailed in the previous
                step.</para>
              </note></para>
          </listitem>
        </orderedlist></para>
    </step>

    <step>
      <para><emphasis role="bold">Restore. </emphasis>After you have the new
      version of SciDB running, restore any data that you backed up in step 1.
      Unless you saved your arrays using the OPAQUE method, you need to reload
      your arrays as 1-dimensional arrays, and then redimension them.</para>
    </step>
  </procedure>

  <note>
    <para>Utilities from different versions of SciDB are not inter-operable.
    For example, a &scidb_version; client cannot be used with a 13.1 SciDB
    server.</para>
  </note>
</section>
