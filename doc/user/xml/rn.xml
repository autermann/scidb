<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE preface PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % myents SYSTEM "scidb_ug.ent">
%myents;
]>
<preface id="releaseNotes">
  <title id="rn_title">Release Notes</title>

  <para>These release notes cover features and changes for:<itemizedlist>
      <listitem>
        <para>SciDB Community Edition (CE)</para>
      </listitem>

      <listitem>
        <para>SciDB Enterprise Edition (EE)</para>
      </listitem>

      <listitem>
        <para>Paradigm4 Labs (P4Labs), which is a collection of external tools
        (such as SciDB-R) maintained in the form of GitHub
        repositories.</para>
      </listitem>
    </itemizedlist></para>

  <para>New features and important bug fixes are described in Sections 2, 3,
  and 4. Feature changes made in this release and advance notice of changes
  planned for the next release (R14.6) are discussed in Section 5. Known
  limitations are noted in Section 6.</para>

  <section>
    <title>Supported Operating Systems</title>

    <para>SciDB R&scidb_version; supports three platforms: Ubuntu 12.04, RHEL
    6, and CentOS 6.</para>
  </section>

  <section id="SciDB_ReleaseNotes">
    <title>Community Edition Features and Changes</title>

    <para>This version includes the following features and changes:
    <itemizedlist>
        <listitem>
          <para><emphasis role="bold">Backup/Restore utility:</emphasis> A new
          utility is provided to backup and restore SciDB arrays. The
          functionality is fairly rich. For example, it supports three formats
          including the OPAQUE format. The utility is <emphasis
          role="bold">scidb_backup.py</emphasis>, located in <emphasis
          role="bold">/opt/scidb/14.3/bin</emphasis> folder.</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">Macro support:</emphasis> SciDB 14.3
          introduces basic user-defined macros that can be used to extend both
          the set of SciDB functions and the set of AFL operators. A new
          operator, <command>load_module()</command>, is provided. See <xref
          linkend="macros"/> for details.</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">Improved storage management:
          </emphasis>SciDB 14.3 features better management of disk space, in
          particular:<itemizedlist>
              <listitem>
                <para>When SciDB arrays are deleted, their storage space is
                returned to the file system.</para>
              </listitem>

              <listitem>
                <para>When queries are cancelled, disk space used by those
                queries is reused by subsequent queries.</para>
              </listitem>
            </itemizedlist></para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">Mixed use of AQL and AFL: </emphasis>An
          AQL selection query may be used inside an AFL query wherever a SciDB
          array is expected. This feature may be useful for people familiar
          with AQL but want to tap additional functionality provided by AFL.
          For example, the following query is supported:<programlisting>$ iquery -aq "rank( (select * from build(&lt;v:double&gt;[i=1:5,5,0],i)), v)"</programlisting></para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">Improved Memory Management:</emphasis>
          Certain out-of-memory errors that could occur in the previous
          release have been fixed.</para>
        </listitem>
      </itemizedlist></para>
  </section>

  <section id="P4_ReleaseNotes">
    <title>Enterprise Edition Features and Changes</title>

    <para>This version includes the following features and changes:</para>

    <itemizedlist>
      <listitem>
        <para><emphasis role="bold">SciDB as a service: </emphasis>SciDB EE
        14.3 can now be configured to run as a service. One advantage is that
        the SciDB service will restart after a system reboot. For details, see
        Section 5.7 of the <emphasis>SciDB Enterprise Edition User
        Guide</emphasis>.</para>

        <para/>
      </listitem>

      <listitem>
        <para><emphasis role="bold">Sparse Matrix Multiply: </emphasis>The
        <emphasis role="bold">spgemm()</emphasis> operator has new
        functionality and improved performance:<itemizedlist mark="endash">
            <listitem>
              <para><command>spgemm()</command> supports optional <emphasis
              role="bold">‘min.+’</emphasis> and <emphasis
              role="bold">‘max.+’</emphasis> semiring arithmetic. Such
              alternative arithmetic permits <emphasis
              role="bold"><command>spgemm()</command></emphasis> to be used
              for a wide variety of graph algorithms, such as shortest paths
              and measures of centrality.</para>
            </listitem>

            <listitem>
              <para>The performance of <command>spgemm()</command> has been
              improved in the case of matrix-vector multiplication.</para>
            </listitem>
          </itemizedlist></para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">Shortest paths:</emphasis> An example
        script for computing single-source shortest paths (SSSP), using
        spgemm() and the Bellman-Ford algorithm is given in <emphasis
        role="bold">/opt/scidb/14.3/bin/
        bellman_ford_example.sh</emphasis>.</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">PageRank:</emphasis> An example script for
        computing Google PageRank is given in <emphasis
        role="bold">/opt/scidb/14.3/bin/pagerank_example.sh</emphasis>.</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">Random number generator: </emphasis>A new
        operator, <command>rng_uniform()</command>, provides a faster, higher
        quality, pseudo-random number generator than
        <command>build(...,random())</command> and similar variants.</para>
      </listitem>
    </itemizedlist>
  </section>

  <section>
    <title>Paradigm4 Labs Features and Changes</title>

    <para>We make available a collection of external tools in the form of
    GitHub repositories at <ulink
    url="http://github.com/paradigm4">http://github.com/paradigm4</ulink>.</para>

    <para>For SciDB 14.3, a non-root install procedure has been added. For
    details, see <ulink
    url="http://downloads.paradigm4.com/nri">http://downloads.paradigm4.com/nri</ulink>.</para>
  </section>

  <section>
    <title>Deprecation Notes</title>

    <para>This section lists important feature changes made in this release
    and changes forthcoming in future releases. For each change, we also
    identify in which the release we provided deprecation notice.</para>

    <informaltable>
      <tgroup cols="4">
        <colspec colname="_1" colwidth="61*"/>

        <colspec colname="_2" colwidth="15*"/>

        <colspec colname="_3" colwidth="15*"/>

        <colspec colname="_4" colwidth="9*"/>

        <thead>
          <row>
            <entry>Functionality Change</entry>

            <entry>Deprecation Notice</entry>

            <entry>Deprecation Effective</entry>

            <entry>Edition</entry>
          </row>

          <row>
            <entry align="center" nameend="_4" namest="_1"><emphasis>Changes
            made in this release (R14.3)</emphasis></entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry>Removed individual aggregate operators:<itemizedlist>
                <listitem>
                  <para><command>approxdc()</command></para>
                </listitem>

                <listitem>
                  <para><command>avg()</command></para>
                </listitem>

                <listitem>
                  <para><command>count()</command></para>
                </listitem>

                <listitem>
                  <para><command>max()</command></para>
                </listitem>

                <listitem>
                  <para><command>min()</command></para>
                </listitem>

                <listitem>
                  <para><command>stdev()</command></para>
                </listitem>

                <listitem>
                  <para><command>sum()</command></para>
                </listitem>

                <listitem>
                  <para><command>var()</command></para>
                </listitem>
              </itemizedlist>Use <command>aggregate()</command>
            instead.</entry>

            <entry>13.12</entry>

            <entry>14.3</entry>

            <entry>CE</entry>
          </row>

          <row>
            <entry>Removed operator
            <command>redimension_store()</command>.<para>Use
            <command>store(redimension())</command> instead.</para></entry>

            <entry>13.12</entry>

            <entry>14.3</entry>

            <entry>CE</entry>
          </row>

          <row>
            <entry>Removed operator <command>cross()</command>.<para>Use
            <command>cross_join()</command> instead.</para></entry>

            <entry>13.12</entry>

            <entry>14.3</entry>

            <entry>CE</entry>
          </row>

          <row>
            <entry>The behavior of the <command>show()</command> operator has
            changed.<para>Let <emphasis role="bold">A</emphasis> be the name
            of a stored SciDB array. This syntax is no longer
            supported:<programlisting>AFL% show('A as array', 'afl');</programlisting>Instead,
            use the following syntax:<programlisting>AFL% show(filter('A,true)', 'afl');</programlisting></para></entry>

            <entry>14.3</entry>

            <entry>14.3</entry>

            <entry>CE</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

    <informaltable>
      <tgroup cols="3">
        <colspec colname="_1" colwidth="74*"/>

        <colspec colname="_2" colwidth="15*"/>

        <colspec colname="_4" colwidth="9*"/>

        <thead>
          <row>
            <entry>Functionality Change</entry>

            <entry>Deprecation Notice</entry>

            <entry>Edition</entry>
          </row>

          <row>
            <entry align="center" nameend="_4" namest="_1"><emphasis>Expected
            changes in the next release (R14.6)</emphasis></entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry>Will remove the following operators:
            <command>corr()</command>, <command>covar()</command> and
            <command>covariance()</command>.<para>Use
            <command>pearson()</command>, <command>spearman()</command>, or
            <command>kendall()</command> instead.</para></entry>

            <entry>14.3</entry>

            <entry>EE</entry>
          </row>

          <row>
            <entry>Will remove the following operators:
            <command>euclidean()</command> and
            <command>manhattan()</command>.<para>Use
            <command>apply()</command> instead.</para></entry>

            <entry>14.3</entry>

            <entry>EE</entry>
          </row>

          <row>
            <entry>Will remove attribute type <command>string_xxx</command>;
            use the <command>string</command> type.</entry>

            <entry>14.3</entry>

            <entry>CE</entry>
          </row>

          <row>
            <entry>Will remove the use of integer data types with the
            <command>spgemm()</command> operator. </entry>

            <entry>14.3</entry>

            <entry>EE</entry>
          </row>

          <row>
            <entry>Will remove the <command>sample()</command>
            operator.<para>Use <command>bernoulli()</command>
            instead.</para></entry>

            <entry>14.3</entry>

            <entry>CE</entry>
          </row>

          <row>
            <entry>Will remove the <command>build_sparse()</command>
            operator.<para>Use a combination of
            <command>redimension()</command> and <command>build()</command>
            instead. See the AFL operator reference, <xref linkend="build"/>,
            for details.</para></entry>

            <entry>13.12</entry>

            <entry>CE</entry>
          </row>

          <row>
            <entry>Will remove the <command>NOT EMPTY</command> constraint in
            array schemas. All SciDB arrays will be empty-able.</entry>

            <entry>13.11</entry>

            <entry>CE</entry>
          </row>

          <row>
            <entry>Will disallow the use of "impure" operators inside other
            operators. By impure, we mean operators that have side effects.
            The following operators fall into this class, and thus should be
            used only at the top-level of a query.<itemizedlist>
                <listitem>
                  <para><command>create_array()</command>,
                  <command>store()</command>, <command>load()</command>,
                  <command>input()</command>, <command>rename()</command>,
                  <command>remove()</command>, and <command>save()</command>,
                  which modify arrays.</para>
                </listitem>

                <listitem>
                  <para><command>load_library()</command>,
                  <command>unload_library()</command>,
                  <command>load_module()</command>, and
                  <command>setopt()</command>, which modify how queries
                  execute.</para>
                </listitem>
              </itemizedlist></entry>

            <entry>14.3</entry>

            <entry>CE</entry>
          </row>

          <row>
            <entry>Will disallow the use of the following parameters in
            <emphasis role="bold">config.ini</emphasis>:<itemizedlist>
                <listitem>
                  <para><command>chunk-segment-size</command></para>
                </listitem>

                <listitem>
                  <para><command>repart-seq-scan-threshold</command></para>
                </listitem>

                <listitem>
                  <para><command>repart-algorithm</command></para>
                </listitem>

                <listitem>
                  <para><command>repart-dense-open-once</command></para>
                </listitem>

                <listitem>
                  <para><command>repart-disable-tile-mode</command></para>
                </listitem>

                <listitem>
                  <para><command>rle-chunk-format</command></para>
                </listitem>

                <listitem>
                  <para><command>parallel-sort</command></para>
                </listitem>

                <listitem>
                  <para><command>save-ram</command></para>
                </listitem>
              </itemizedlist></entry>

            <entry>14.3</entry>

            <entry>CE</entry>
          </row>

          <row>
            <entry>Will enforce case sensitivity for all identifiers,
            including operators, functions, types, attribute names,
            dimensions, and array names.</entry>

            <entry>14.3</entry>

            <entry>CE</entry>
          </row>

          <row>
            <entry>The default chunk size will be set to 1 million cells
            (presently defaults to 500 thousand cells).</entry>

            <entry>14.3</entry>

            <entry>CE</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section>

  <section>
    <title>Known Limitations</title>

    <para><itemizedlist>
        <listitem>
          <para>The <command role="bold">dimensions()</command> operator
          sometimes reports incorrect start, length, low and high values for
          unbounded arrays. Correct values may be obtained using <command
          role="bold">apply()</command> to translate a dimension into an
          attribute, followed by a min / max aggregate.</para>
        </listitem>

        <listitem>
          <para>The difference between the largest and the smallest dimension
          value in an array must not exceed
          (2<superscript>61</superscript> - 1).</para>
        </listitem>

        <listitem>
          <para>The <command>gemm()</command> and <command>gesvd()</command>
          operators produce incorrect results when the input matrices are
          sparse.</para>
        </listitem>

        <listitem>
          <para>The <command role="bold">adddim()</command> and <command
          role="bold">deldim()</command> operators may return incorrect
          results, or cause a system crash, when used in certain
          queries.</para>
        </listitem>

        <listitem>
          <para>Whenever a query requires filtering on dimension values,
          <command role="bold">filter()</command> may not be the fastest
          approach. In the vast majority of cases, <command
          role="bold">between()</command>, <command
          role="bold">subarray()</command>, <command
          role="bold">cross_join()</command>, or a combination of them,
          performs better. For more information about using <command
          role="bold">cross_join()</command> as a dimensions filter, see
          <ulink
          url="http://www.scidb.org/forum/viewtopic.php?f=18&amp;t=1204">http://www.scidb.org/forum/viewtopic.php?f=18&amp;t=1204</ulink>.</para>
        </listitem>
      </itemizedlist></para>
  </section>
</preface>
