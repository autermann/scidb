<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "docbookV4.5/docbookx.dtd" []>
<refentry>
  <refnamediv>
    <refname>scan</refname>
    <refpurpose>Display cell values</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis><command>SELECT</command> * <command>FROM</command> scan(<replaceable>named_array</replaceable>);</synopsis>
    <synopsis>scan(<replaceable>named_array</replaceable>);</synopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Summary</title>
    <para>
The scan operator displays to contents of each cell in an array. The output of the scan operator is an array the same size as <replaceable>named_array</replaceable>. The argument <replaceable>named_array</replaceable> must be an array that was previously created and stored in the SciDB namespace.  You can use scan with a WHERE clause to view subsets of large arrays. To supress display of empty cells, set the <code>iquery -o sparse</code> option.</para>
  </refsect1>
  <refsect1>
    <title>Example</title>
    <informalexample>
      <para>This example selects the second row from an array and shows the cell values in that row.</para>
      <procedure>
        <step>
          <para>Create a 3<symbol role="symbolfont">&times;</symbol>3 array m3x3:<programlisting>CREATE ARRAY m3x3&lt;val:double&gt;[i=0:2,3,0,j=0:2,3,0];</programlisting></para>
        </step>
        <step>
          <para>Put values of 0&ndash;8 into m3x3:<programlisting>store(build(m3x3,i*3+j),m3x3);</programlisting></para>
        </step>
        <step>
          <para>Use scan in an AQL <code><command>FROM</command></code> clause to display the middle row of m3x3:<programlisting><command>SELECT</command> val <command>FROM</command> scan(m3x3) <command>WHERE</command> i=1;</programlisting>This query outputs:<programlisting>[
[(),(),()],
[(3),(4),(5)],
[(),(),()]
]</programlisting></para>
        </step>
        <step>
          <para>You can supress the empty cells in the output by setting the iquery output to sparse:<programlisting>quit;
iquery -o sparse
AQL% SELECT val FROM scan(m3x3) WHERE i=1;
{1,0}[[{1,0}(3),{1,1}(4),{1,2}(5)]]</programlisting></para>
        </step>
      </procedure>
    </informalexample>
  </refsect1>
</refentry>
