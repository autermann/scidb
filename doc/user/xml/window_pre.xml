<?xml version="1.0" encoding="UTF-8"?>
<!-- This document was created with Syntext Serna Free. -->
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"docbookV4.5/docbookx.dtd">
<refentry>
  <refnamediv>
    <refname>window</refname>

    <refpurpose><indexterm>
        <primary>window operator</primary>
      </indexterm>Compute aggregates over moving window</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <synopsis>AFL% window(<replaceable>array</replaceable>, <replaceable>dim_1_low</replaceable>,<replaceable>dim_1_high</replaceable>, <replaceable>[dim_2_low</replaceable>,<replaceable>dim_2_high</replaceable>,]...
<replaceable>   aggregate_1</replaceable><optional>,<replaceable>aggrgegate_2</replaceable>, ...</optional>
</synopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>Summary</title>

    <para>Compute one or more aggregates of any of an array's attributes over
    a moving window.</para>

    <note>
      <para>The AFL window operator provides the same functionality as the AQL
      <code><command>SELECT</command></code> ...
      <code><command>FROM</command></code> ...
      <code><command>WINDOW</command></code> statement. See the User's Guide
      chapter on Aggregates for more information.</para>
    </note>
  </refsect1>

  <refsect1>
    <title>Example</title>

    <informalexample>
      <para>This example calculates a running sum for a 3<symbol>×</symbol>3
      window on a 4<symbol>×</symbol>4 array. The window is multi-dimensional,
      with the same number of dimensions as the array, and is specified by a
      pair of values for each dimension, the "high" and "low" sizes. Each
      dimension of the window includes one cell for the "center", "high"
      number of cells above it, and "low" cells below it.</para>

      <procedure>
        <step>
          <para>Create an array called m4x4:<programlisting language="test">--afl CREATE ARRAY m4x4 &lt;val:double&gt;[i=0:3,4,0,j=0:3,4,0]; --show-output=no</programlisting></para>
        </step>

        <step>
          <para>Store values of 0–15 in m4x4: <programlisting language="test">--afl store(build(m4x4,i*4+j),m4x4); --output-format=dense --chunkify=yes</programlisting></para>
        </step>

        <step>
          <para>Return the maximum and minimum values on a moving 3<symbol
          role="symbolfont">×</symbol>3 window on m4x4: This window
          specification is a two-dimensional window of size 3x3, whose
          "center" is at the upper left corner of the 3x3 rectangle.
          <programlisting language="test">--afl window(m4x4,0,2,0,2,max(val),min(val)); --output-format=dense --chunkify=yes</programlisting></para>
        </step>
      </procedure>
    </informalexample>
  </refsect1>
</refentry>
