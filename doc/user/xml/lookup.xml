<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "docbookV4.5/docbookx.dtd" []>
<refentry>
  <refnamediv>
    <refname>lookup</refname>
    <refpurpose>Select array cells by dimension index</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis><command>SELECT</command> * <command>FROM</command> lookup(<replaceable>pattern_array</replaceable>,<replaceable>source_array</replaceable>);</synopsis>
    <synopsis>lookup(<replaceable>pattern_array</replaceable>,<replaceable>source_array</replaceable>);</synopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Summary</title>
    <para>Lookup maps elements from the second array using the attributes of the first array as coordinates into the
second array. The result array has the same shape as first array and the same attributes as second array.
</para>
  </refsect1>
  <refsect1>
    <title>Example</title>
    <informalexample>
      <para>This example selects a row from a 2-dimensional array.</para>
      <procedure>
        <step>
          <para>Create an vector of ones called indices1:<programlisting>store(build(&lt;val1:double&gt;[i=0:3,4,0],1),indices1);</programlisting><screen>[(1),(1),(1),(1)]</screen></para>
        </step>
        <step>
          <para>Create a vector with values between 0 and 3 called indices2:<programlisting>store(build(&lt;val1:double&gt;[i=0:3,4,0],i),indices2);</programlisting><screen>[(0),(1),(2),(3)]</screen></para>
        </step>
        <step>
          <para>Join indices1 and indices2 into a two-attribute array called pattern_array:<programlisting>store(join(indices1,indices2),pattern_array);</programlisting><screen>[(1,0),(1,1),(1,2),(1,3)]</screen></para>
        </step>
        <step>
          <para>Create a 2-dimensional array called source_array with values between 100 and 115:<programlisting>store(build(&lt;val:double&gt;[i=0:3,4,0,j=0:3,4,0],i*4+j+100)
   ,source_array);</programlisting><screen>[
[(100),(101),(102),(103)],
[(104),(105),(106),(107)],
[(108),(109),(110),(111)],
[(112),(113),(114),(115)]
]</screen></para>
        </step>
        <step>
          <para>Use lookup to use the dimension coordinates array pattern_array to return the second row of source_array:<programlisting>lookup(pattern_array,source_array);</programlisting>This query outputs:<screen>[(104),(105),(106),(107)]</screen></para>
        </step>
      </procedure>
    </informalexample>
  </refsect1>
</refentry>
