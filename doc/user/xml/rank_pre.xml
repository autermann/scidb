<?xml version="1.0" encoding="UTF-8"?>
<!-- This document was created with Syntext Serna Free. -->
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"docbookV4.5/docbookx.dtd">
<refentry>
  <refnamediv id="rankOperator">
    <refname>rank</refname>

    <refpurpose><indexterm>
        <primary>ranking methods</primary>

        <secondary>rank</secondary>
      </indexterm><indexterm>
        <primary>rank</primary>
      </indexterm>Rank array elements</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <synopsis>rank(<replaceable>array</replaceable>, [<replaceable>attribute</replaceable> [, <replaceable>dimension1</replaceable> [, <replaceable>dimension2</replaceable>... ]]
   [<replaceable>attribute2</replaceable> [, <replaceable>dimension</replaceable>...]]])</synopsis>

    <synopsis>rank(<replaceable>array</replaceable><optional>,<replaceable>attribute1</replaceable>,<replaceable>attribute2,...</replaceable></optional>
   <optional>,<replaceable>dimension1</replaceable>,<replaceable>dimension2</replaceable>,...</optional>);</synopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>Summary</title>

    <para>Ranking array elements sorts them and assigns an ordinal
    rank.</para>

    <para>The <literal>avg_rank</literal> operator is equivalent to
    <literal>rank</literal> except for handling ties. The
    <literal>avg_rank</literal> operator averages the rank for the tied
    values. For details, see the <link linkend="avgRank">avg_rank</link>
    reference.</para>
  </refsect1>

  <refsect1>
    <title>Example</title>

    <informalexample>
      <para>This example ranks a 4<symbol role="symbolfont">×</symbol>4 array
      by dimension.</para>

      <procedure>
        <step>
          <para>Create a 4<symbol role="symbolfont">×</symbol>4 array called
          rank_array:<programlisting language="test">--afl CREATE ARRAY rank_array &lt;val:double&gt;[i=0:3,4,0,j=0:3,4,0]; --show-output=no</programlisting></para>
        </step>

        <step>
          <para>Put random values of 0–6 into rank_array:<programlisting
          language="test">--afl store(build(rank_array,random()%7/1.0),rank_array); --show-output-in-test-file=no
   --output-format=dense --chunkify=yes</programlisting></para>
        </step>

        <step>
          <para>Rank the elements in rank_array by dimension i:<programlisting
          language="test">--afl rank(rank_array,val,i); --show-output-in-test-file=no
   --output-format=dense --chunkify=yes</programlisting></para>
        </step>

        <step>
          <para>Rank the elements in rank_array by dimension j:<programlisting
          language="test">--afl rank(rank_array,val,j); --show-output-in-test-file=no
   --output-format=dense --chunkify=yes</programlisting></para>
        </step>
      </procedure>
    </informalexample>
  </refsect1>
</refentry>
