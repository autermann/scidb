<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "docbookV4.5/docbookx.dtd" []>
<chapter>
  <title>Updating Your Data</title>
  <para>SciDB uses a &quot;no overwrite&quot; storage model. No overwrite means that data in an array can be updated but previous values can be accessed as long as the array exists in the SciDB namespace. Every time you update data in an array, SciDB creates a new array version, much like source control systems for software development.</para>
  <sect1>
    <title>The UPDATE ... SET statement</title>
    <para>To update data in an existing SciDB array, use the statement:<programlisting>AQL% <command>UPDATE</command> <replaceable>array</replaceable> <command>SET</command> &quot;<replaceable>attr</replaceable> = <replaceable>expr</replaceable>&quot;, ... [ <command>WHERE</command> <replaceable>condition</replaceable> ];</programlisting></para>
    <para>Consider the following 2-dimensional array, <code>m4x4</code>:<programlisting>[(&quot;m4x4&lt;val:double&gt; [x=0:3,4,0,y=0:3,4,0]&quot;)]
[
[(0),(1),(2),(3)],
[(4),(5),(6),(7)],
[(8),(9),(10),(11)],
[(12),(13),(14),(15)]
]</programlisting>To change every value in <code>val</code> to its additive inverse:<programlisting>AQL% <command>UPDATE</command> m4x4 <command>SET</command> val=-val;</programlisting><screen>[
[(0),(-1),(-2),(-3)],
[(-4),(-5),(-6),(-7)],
[(-8),(-9),(-10),(-11)],
[(-12),(-13),(-14),(-15)]
]</screen>The <code>
        <command>WHERE</command>
      </code> clause lets you choose attributes based on conditions. For example, you can select just cells with absolute values greater than 5 to set to their multiplicative inverse:<programlisting>AQL% <command>UPDATE</command> m4x4 <command>SET</command> val=pow(val,-1) <command>WHERE</command> abs(val) &gt; 5;</programlisting><screen>[
[(0),(-1),(-2),(-3)],
[(-4),(-5),(-0.166667),(-0.142857)],
[(-0.125),(-0.111111),(-0.1),(-0.0909091)],
[(-0.0833333),(-0.0769231),(-0.0714286),(-0.0666667)]
]</screen></para>
  </sect1>
  <sect1>
    <title>Array Versions</title>
    <para>When an array is updated, a new array version is created. SciDB stores the array versions. For example, in the previous section, SciDB stored every version of m4x4 created by the <code>
        <command>UPDATE</command>
      </code> command. You can see these versions with  <code>versions</code>:<programlisting>AQL% <command>SELECT</command> * <command>FROM</command> versions(m4x4);</programlisting><screen>[(1,&quot;2012-02-03 17:20:50&quot;),
(2,&quot;2012-02-06 14:51:20&quot;),
(3,&quot;2012-02-06 14:52:33&quot;)]</screen>You can see the contents of any previous version of the array by using the version number:<programlisting>AQL% <command>SELECT</command> * <command>FROM</command> scan(m4x4@1);
[
[(0),(1),(2),(3)],
[(4),(5),(6),(7)],
[(8),(9),(10),(11)],
[(12),(13),(14),(15)]
]</programlisting>Or the array timestamp:<programlisting>AQL% <command>SELECT</command> * <command>FROM</command> scan(m4x4@datetime(&apos;2012-02-03 17:20:50&apos;));
[
[(0),(1),(2),(3)],
[(4),(5),(6),(7)],
[(8),(9),(10),(11)],
[(12),(13),(14),(15)]
]</programlisting></para>
    <para>You can use the array version name in any query. The unqualified name of the array always refers to the most recent version as of the start of the query.</para>
  </sect1>
</chapter>
