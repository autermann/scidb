<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "docbookV4.5/docbookx.dtd" []>
<refentry>
  <refnamediv>
    <refname>concat</refname>
    <refpurpose>Concatenate two arrays </refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <synopsis><command>SELECT</command> * <command>FROM</command> concat(<replaceable>left_array</replaceable>,<replaceable>right_array</replaceable>);</synopsis>
    <synopsis>concat(<replaceable>left_array</replaceable>,<replaceable>right_array</replaceable>);</synopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Summary</title>
    <para>The concat operator concatenates two arrays with the name number of dimensions. Concatenation is performed by the left-most dimension.
All other dimensions of the input arrays must match. The left-most dimension of both arrays must have a
fixed size (not unbounded) and same chunk size and overlap. Both inputs must have the same attributes.
</para>
  </refsect1>
  <refsect1>
    <title>Example</title>
    <informalexample>
      <para>This example concatenates a 4<symbol role="symbolfont">&times;</symbol>3 array and a 1<symbol role="symbolfont">&times;</symbol>3 array.</para>
      <procedure>
        <step>
          <para>Create a 4<symbol role="symbolfont">&times;</symbol>3 array left_array containing value  1 in all cells:<programlisting>create array left_array &lt;val:double&gt;[i=0:3,1,0,j=0:3,1,0];
store(build(left_array,1),left_array);</programlisting></para>
        </step>
        <step>
          <para>Create a  1<symbol role="symbolfont">&times;</symbol>3 array right_array containing value 0 in all cells:<programlisting>create array right_array &lt;val:double&gt;[i=0:1,1,0,j=0:2,1,0];
store(build(right_array,0),right_array);</programlisting></para>
        </step>
        <step>
          <para>Concatentate left_array and right_array and store the result in concat_array:<programlisting>store(concat(left_array,right_array),concat_array);</programlisting>This produces an array concat_array with contents and schema as follows:<programlisting>show(concat_array);scan(concat_array);</programlisting><screen>show(concat_array);scan(concat_array);
[(&quot;concat_array&lt;val:double&gt; [i=0:5,1,0,j=0:2,1,0]&quot;)]
[[(1)]];[[(1)]];[[(1)]];[[(1)]];[[(1)]];[[(1)]];
[[(1)]];[[(1)]];[[(1)]];[[(1)]];[[(1)]];[[(1)]];
[[(0)]];[[(0)]];[[(0)]];[[(0)]];[[(0)]];[[(0)]]</screen></para>
        </step>
      </procedure>
    </informalexample>
  </refsect1>
</refentry>
