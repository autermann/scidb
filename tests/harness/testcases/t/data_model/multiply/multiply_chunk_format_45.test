--setup
--start-query-logging
--start-igdata
--justrun "remove(MAT)"
create array MAT <v:double>[r=0:199,32,0, c=0:199,32,0]
--stop-igdata

--test
# All counts must be the same (fix for #2154)

count(multiply(build(<v:double>[r=0:199,32,0, c=0:199,32,0],abs(random()/2147483648.0)+1.0e-6), multiply(build(<v:double>[r=0:199,32,0, c=0:199,32,0],iif(r=c, 1.0 + r * -0.00502512562814, 0)),build(<v:double>[r=0:199,32,0, c=0:199,32,0],abs(random()/2147483648.0)+1.0e-6), 'iterative')))
--igdata "store(multiply(build(<v:double>[r=0:199,32,0, c=0:199,32,0],abs(random()/2147483648.0)+1.0e-6), multiply(build(<v:double>[r=0:199,32,0, c=0:199,32,0],iif(r=c, 1.0 + r * -0.00502512562814, 0)),build(<v:double>[r=0:199,32,0, c=0:199,32,0],abs(random()/2147483648.0)+1.0e-6)),'iterative'), MAT)"
count(MAT)
count(multiply(MAT, MAT))

remove(MAT)
create array MAT <v:double>[r=0:199,32,0, c=0:199,32,0]

count(multiply(build(<v:double>[r=0:199,32,0, c=0:199,32,0],abs(random()/2147483648.0)+1.0e-6), multiply(build(<v:double>[r=0:199,32,0, c=0:199,32,0],iif(r=c, 1.0 + r * -0.00502512562814, 0)),build(<v:double>[r=0:199,32,0, c=0:199,32,0],abs(random()/2147483648.0)+1.0e-6), 'dense')))
--igdata "store(multiply(build(<v:double>[r=0:199,32,0, c=0:199,32,0],abs(random()/2147483648.0)+1.0e-6), multiply(build(<v:double>[r=0:199,32,0, c=0:199,32,0],iif(r=c, 1.0 + r * -0.00502512562814, 0)),build(<v:double>[r=0:199,32,0, c=0:199,32,0],abs(random()/2147483648.0)+1.0e-6)),'dense'), MAT)"
count(MAT)
count(multiply(MAT, MAT))

remove(MAT)
create array MAT <v:double>[r=0:199,32,0, c=0:199,32,0]

count(multiply(build(<v:double>[r=0:199,32,0, c=0:199,32,0],abs(random()/2147483648.0)+1.0e-6), multiply(build(<v:double>[r=0:199,32,0, c=0:199,32,0],iif(r=c, 1.0 + r * -0.00502512562814, 0)),build(<v:double>[r=0:199,32,0, c=0:199,32,0],abs(random()/2147483648.0)+1.0e-6), 'sparse')))
--igdata "store(multiply(build(<v:double>[r=0:199,32,0, c=0:199,32,0],abs(random()/2147483648.0)+1.0e-6), multiply(build(<v:double>[r=0:199,32,0, c=0:199,32,0],iif(r=c, 1.0 + r * -0.00502512562814, 0)),build(<v:double>[r=0:199,32,0, c=0:199,32,0],abs(random()/2147483648.0)+1.0e-6)),'sparse'), MAT)"
count(MAT)
count(multiply(MAT, MAT))

remove(MAT)
create array MAT <v:double>[r=0:199,32,0, c=0:199,32,0]

count(multiply(build(<v:double>[r=0:199,32,0, c=0:199,32,0],abs(random()/2147483648.0)+1.0e-6), multiply(build(<v:double>[r=0:199,32,0, c=0:199,32,0],iif(r=c, 1.0 + r * -0.00502512562814, 0)),build(<v:double>[r=0:199,32,0, c=0:199,32,0],abs(random()/2147483648.0)+1.0e-6), 'auto')))
--igdata "store(multiply(build(<v:double>[r=0:199,32,0, c=0:199,32,0],abs(random()/2147483648.0)+1.0e-6), multiply(build(<v:double>[r=0:199,32,0, c=0:199,32,0],iif(r=c, 1.0 + r * -0.00502512562814, 0)),build(<v:double>[r=0:199,32,0, c=0:199,32,0],abs(random()/2147483648.0)+1.0e-6)),'auto'), MAT)"
count(MAT)
count(multiply(MAT, MAT))

--cleanup
remove(MAT)

--stop-query-logging
