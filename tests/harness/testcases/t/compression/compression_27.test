--setup
--start-query-logging
create immutable array Ts <a:int64> [x=-2:3,2,1,y=0:2,3,0]
create immutable array Ts_rle <a:int64 compression 'rle'> [x=-2:3,2,1,y=0:2,3,0]
create immutable array Ts_d <a:int64 compression 'dictionary'> [x=-2:3,2,1,y=0:2,3,0]
create immutable array Ts_ns <a:int64 compression 'null suppression'> [x=-2:3,2,1,y=0:2,3,0]
create immutable array Ts_be <a:int64 compression 'bitmap encoding'> [x=-2:3,2,1,y=0:2,3,0]
create immutable array Ts_z <a:int64 compression 'zlib'> [x=-2:3,2,1,y=0:2,3,0]
create immutable array Ts_bz <a:int64 compression 'bzlib'> [x=-2:3,2,1,y=0:2,3,0]
create immutable array Ts_nf <a:int64 compression 'null filter'> [x=-2:3,2,1,y=0:2,3,0]

create immutable empty array eTs <a:int64> [x=-2:3,2,1,y=0:2,3,0]
create immutable empty array eTs_rle <a:int64 compression 'rle'> [x=-2:3,2,1,y=0:2,3,0]
create immutable empty array eTs_d <a:int64 compression 'dictionary'> [x=-2:3,2,1,y=0:2,3,0]
create immutable empty array eTs_ns <a:int64 compression 'null suppression'> [x=-2:3,2,1,y=0:2,3,0]
create immutable empty array eTs_be <a:int64 compression 'bitmap encoding'> [x=-2:3,2,1,y=0:2,3,0]
create immutable empty array eTs_z <a:int64 compression 'zlib'> [x=-2:3,2,1,y=0:2,3,0]
create immutable empty array eTs_bz <a:int64 compression 'bzlib'> [x=-2:3,2,1,y=0:2,3,0]
create immutable empty array eTs_nf <a:int64 compression 'null filter'> [x=-2:3,2,1,y=0:2,3,0]

create immutable array dTs <a:int64 default 2> [x=-2:3,2,1,y=0:2,3,0]
create immutable array dTs_rle <a:int64 default 2 compression 'rle'> [x=-2:3,2,1,y=0:2,3,0]
create immutable array dTs_d <a:int64 default 2 compression 'dictionary'> [x=-2:3,2,1,y=0:2,3,0]
create immutable array dTs_ns <a:int64 default 2 compression 'null suppression'> [x=-2:3,2,1,y=0:2,3,0]
create immutable array dTs_be <a:int64 default 2 compression 'bitmap encoding'> [x=-2:3,2,1,y=0:2,3,0]
create immutable array dTs_z <a:int64 default 2 compression 'zlib'> [x=-2:3,2,1,y=0:2,3,0]
create immutable array dTs_bz <a:int64 default 2 compression 'bzlib'> [x=-2:3,2,1,y=0:2,3,0]
create immutable array dTs_nf <a:int64 default 2 compression 'null filter'> [x=-2:3,2,1,y=0:2,3,0]

create immutable empty array edTs <a:int64 default 2> [x=-2:3,2,1,y=0:2,3,0]
create immutable empty array edTs_rle <a:int64 default 2 compression 'rle'> [x=-2:3,2,1,y=0:2,3,0]
create immutable empty array edTs_d <a:int64 default 2 compression 'dictionary'> [x=-2:3,2,1,y=0:2,3,0]
create immutable empty array edTs_ns <a:int64 default 2 compression 'null suppression'> [x=-2:3,2,1,y=0:2,3,0]
create immutable empty array edTs_be <a:int64 default 2 compression 'bitmap encoding'> [x=-2:3,2,1,y=0:2,3,0]
create immutable empty array edTs_z <a:int64 default 2 compression 'zlib'> [x=-2:3,2,1,y=0:2,3,0]
create immutable empty array edTs_bz <a:int64 default 2 compression 'bzlib'> [x=-2:3,2,1,y=0:2,3,0]
create immutable empty array edTs_nf <a:int64 default 2 compression 'null filter'> [x=-2:3,2,1,y=0:2,3,0]


--test
--aql select * into Ts_rle from build_sparse(Ts,x,x<>0)
--aql select * into Ts_d from build_sparse(Ts,x,x<>x)
--aql select * into Ts_ns from build_sparse(Ts,x,x<>1 or x<>-1)
--aql select * into Ts_be from build_sparse(Ts,x,x=0 or x=3)
--aql select * into Ts_z from build_sparse(Ts,x,x=-1)
--aql select * into Ts_bz from build_sparse(Ts,x,x=9)
--aql select * into Ts_nf from build_sparse(Ts,x,x=x)

--aql select * into eTs_rle from build_sparse(eTs,x,x<>0)
--aql select * into eTs_d from build_sparse(eTs,x,x<>x)
--aql select * into eTs_ns from build_sparse(eTs,x,x<>1 or x<>-1)
--aql select * into eTs_be from build_sparse(eTs,x,x=0 or x=3)
--aql select * into eTs_z from build_sparse(eTs,x,x=-1)
--aql select * into eTs_bz from build_sparse(eTs,x,x=9)
--aql select * into eTs_nf from build_sparse(eTs,x,x=x)

--aql select * into dTs_rle from build_sparse(dTs,x,true)
--aql select * into dTs_d from build_sparse(dTs,x,true)
--aql select * into dTs_ns from build_sparse(dTs,x,true)
--aql select * into dTs_be from build_sparse(dTs,x,true)
--aql select * into dTs_z from build_sparse(dTs,x,true)
--aql select * into dTs_bz from build_sparse(dTs,x,true)
--aql select * into dTs_nf from build_sparse(dTs,x,true)

--aql select * into edTs_rle from build_sparse(edTs,x,x<>0)
--aql select * into edTs_d from build_sparse(edTs,x,x<>x)
--aql select * into edTs_ns from build_sparse(edTs,x,x<>1 or x<>-1)
--aql select * into edTs_be from build_sparse(edTs,x,x=0 or x=3)
--aql select * into edTs_z from build_sparse(edTs,x,x=-1)
--aql select * into edTs_bz from build_sparse(edTs,x,x=9)
--aql select * into edTs_nf from build_sparse(edTs,x,x=x)

--cleanup
remove(Ts)
remove(Ts_rle)
remove(Ts_d)
remove(Ts_ns)
remove(Ts_be)
remove(Ts_z)
remove(Ts_bz)
remove(Ts_nf)

remove(eTs)
remove(eTs_rle)
remove(eTs_d)
remove(eTs_ns)
remove(eTs_be)
remove(eTs_z)
remove(eTs_bz)
remove(eTs_nf)

remove(dTs)
remove(dTs_rle)
remove(dTs_d)
remove(dTs_ns)
remove(dTs_be)
remove(dTs_z)
remove(dTs_bz)
remove(dTs_nf)

remove(edTs)
remove(edTs_rle)
remove(edTs_d)
remove(edTs_ns)
remove(edTs_be)
remove(edTs_z)
remove(edTs_bz)
remove(edTs_nf)
--stop-query-logging
