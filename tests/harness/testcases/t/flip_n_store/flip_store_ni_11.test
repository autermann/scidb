--setup
--start-query-logging
create immutable array A <a:char,b:char>[x=0:2,3,0]
create immutable array T <a:char>[x=0:2,3,0]
create immutable empty array B <b:char>[a(char)=3,3,0]
create immutable empty array C <a:char>[b(char)=3,3,0]
store(join(build(T,string(x+1)),build(T,string(x+5))),A)

--test
redimension_store(A,B)
redimension_store(B,C)
unpack(B,row)
unpack(C,row)

rename(B,B1)
max(B1)
min(B1)
subarray(B1,'1','2')
between(B1,'1','3')
filter(B1,a>'1')
filter(B1,a<'2')
filter(B1,a='2')
filter(B1,a<>'2')
filter(B1,b>'5')
filter(B1,b<'6')
filter(B1,b='7')
filter(B1,b<>'6')
project(B1,b)
join(B1,B1)
cross(B1,B1)
apply(B1,z,a+'_z')
apply(B1,z,b+'_z')
count(B1)
sort(B1,b)
sort(B1,b desc)
rename(B1,B)

rename(C,C1)
max(C1)
min(C1)
subarray(C1,'5','6')
between(C1,'5','7')
filter(C1,a>'1')
filter(C1,a<'2')
filter(C1,a='2')
filter(C1,a<>'2')
filter(C1,b>'5')
filter(C1,b<'6')
filter(C1,b='7')
filter(C1,b<>'6')
project(C1,a)
join(C1,C1)
cross(C1,C1)
apply(C1,z,a+'_z')
apply(C1,z,b+'_z')
count(C1)
sort(C1,a)
sort(C1,a desc)
rename(C1,C)

--cleanup
remove(A)
remove(T)
remove(B)
remove(C)
--stop-query-logging
