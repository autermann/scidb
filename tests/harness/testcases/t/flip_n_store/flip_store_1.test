--setup
--start-query-logging
create array A <a:int64> [x=0:2,3,0]
create empty array B <x:int64> [a=0:14,3,0]
create empty array C <x:int64> [a=0:14,3,0]
create empty array D <a:int64> [x=0:2,3,0]
store(build(A,x+10),A)
store(B,E)
store(D,F)
store(build_sparse(D,x+5,x<>1),D)

--test
redimension_store(A,B)
redimension_store(D,C)
redimension_store(D,E)
scan(B)
unpack(B,row)
unpack(C,row)
unpack(E,row)
redimension_store(B,F)

max(B)
min(B)
avg(B)
rename(B,B1)
rename(B1,B)
subarray(B,10,11)
between(B,11,20)
filter(B,x>1)
project(B,x)
join(B,B)
cross(B,B)
apply(B,z,x-a)
count(B)
sum(B)
sort(B,x)
sort(B,x desc)

max(C)
min(C)
avg(C)
rename(C,C1)
rename(C1,C)
subarray(C,7,11)
between(C,7,20)
filter(C,x>1)
project(C,x)
join(C,C)
cross(C,C)
apply(C,z,x-a)
count(C)
sum(C)
sort(C,x)
sort(C,x desc)

max(E)
min(E)
avg(E)
rename(E,E1)
rename(E1,E)
subarray(E,10,11)
between(E,11,20)
filter(E,x>1)
project(E,x)
join(E,E)
cross(E,E)
apply(E,z,x-a)
count(E)
sum(E)
sort(E,x)
sort(E,x desc)

max(F)
min(F)
avg(F)
rename(F,F1)
rename(F1,F)
subarray(F,0,1)
between(F,0,1)
filter(F,x>1)
project(F,a)
join(F,F)
cross(F,F)
apply(F,z,x-a)
count(F)
sum(F)
sort(F,a)
sort(F,a desc)

--cleanup
remove(A)
remove(B)
remove(C)
remove(D)
remove(E)
remove(F)
--stop-query-logging
