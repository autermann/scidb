--setup

--start-query-logging

create empty array unbounded <a:int64>[x=1:*,5,0]
load(unbounded,'../tests/harness/testcases/data/unbounded_empty.txt')
create empty array unbounded2 <x:int64>[a=1:*,128,0] 
create empty array unbounded3 <a:int64>[x=1:*,128,0]

--test

redimension_store(unbounded,unbounded2)

show(unbounded2)
avg(unbounded2)
count(unbounded2)
sum(unbounded2)
min(unbounded2)
project(unbounded2,x)
stdev(unbounded2)
subarray(unbounded2,1,4)
filter(unbounded2,x<15)
max(unbounded2)
subarray(window(unbounded2,1,0,sum(x),count(x)),1,100)
merge(unbounded2,unbounded3)
apply(subarray(unbounded2,1,40), z,a+5)
join(unbounded2,unbounded2)
cross_join(unbounded2,unbounded2)
cross(unbounded2,unbounded2)
transpose(unbounded2)
repart(unbounded2, unbounded)
bernoulli(unbounded2,1,1)
redimension(unbounded2,unbounded)
aggregate(unbounded2, sum(x))
between(unbounded2,1,10)
regrid(unbounded2,4,sum(x))
attributes(unbounded2)
rename(unbounded2, temp)
scan(temp)
rename(temp,unbounded2)
scan(unbounded2)
sample(unbounded2,1,1)
dimensions(unbounded2)
adddim(unbounded2,z)
deldim(adddim(unbounded2,z))
cast(unbounded2,unbounded3)
dimensions(unbounded2)
--error "normalize(unbounded2)"
store(unbounded2,unbounded2_new)
substitute(unbounded2,build(<a:bool>[x=0:30,2,0],true))
var(unbounded2)
project(versions(unbounded2), version_id)

#not supported for 1-D
#multiply(unbounded2,unbounded2)   
#slice(unbounded2,a,1)  

#not supported for unbounded - #1497
#multiply
#reshape  -as of 4392
#reverse
#concat
#build
#build_sparse
#xgrid

#not supported
#unpack
           
# ticket #1510
# sort(unbounded2,x desc)	   


show(unbounded2)
allversions(unbounded2)
--cleanup
remove(unbounded)
remove(unbounded2)
remove(unbounded3)
remove(unbounded2_new)
--stop-query-logging

