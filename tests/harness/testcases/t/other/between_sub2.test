--setup
--start-query-logging
#Ticket number : 1624
#Tests for very sparse 2D,3D(inf-nan) and unbounded array

create array A <val:int64> [x=0:10000,5000,0,y=0:10000,5000,0]
load(A, '../tests/harness/testcases/data/bsparse.txt')
create array B <val:int64> [x=0:*,5000,0,y=0:*,5000,0]
load(B, '../tests/harness/testcases/data/bsparse.txt')
create array C <num:double> [x=1:100000000,100000,0,y=1:500000,100000,0,z=1:*,100000,0]
load(C, '../tests/harness/testcases/data/bsp1.txt')


--test
--set-format sparse
subarray(A,0,0,2500,2500)
subarray(A,0,1,2500,2500)
between(A,0,0,2500,2500)
between(B,1000,0,5001,5001)
join(subarray(A,0,0,2500,2500),subarray(A,0,1,2500,2500))
count(join(subarray(A,0,0,2500,2500),subarray(A,0,1,2500,2500)))
store(join(subarray(A,0,0,2500,2500),subarray(A,0,1,2500,2500)),AAA)
slice(A,x,0)
slice(A,x,5000)
concat(subarray(A,0,0,5,5),subarray(B,0,0,5,5))
--error --code=scidb::SCIDB_SE_INFER_SCHEMA::SCIDB_LE_ARRAYS_NOT_CONFORMANT "concat(between(A,0,0,5,5),between(B,0,0,5,5))"
count(join(C,C))
subarray(C,1,1,1,10000,10000,10000)
subarray(C,1,1,1,1,1,2)
subarray(C,100000000,500000,9999999,100000000,500000,10000000)
join(subarray(C,1,1,1,1,1,2),subarray(C,100000000,500000,9999999,100000000,500000,10000000))

--cleanup
remove(A)
remove(B)
remove(C)
remove(AAA)

--stop-query-logging
