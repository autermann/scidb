SCIDB QUERY : <store(build(<attr1:int32> [x=0:3,4,0, y=0:3,4,0], x*4+y),m4x4)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <show(m4x4)>
{i} schema
{0} 'm4x4<attr1:int32> [x=0:3,4,0,y=0:3,4,0]'

SCIDB QUERY : <scan(m4x4)>
[[(0),(1),(2),(3)],[(4),(5),(6),(7)],[(8),(9),(10),(11)],[(12),(13),(14),(15)]]

SCIDB QUERY : <store(build(<attr2:int32> [x=0:3,4,0, y=0:3,4,0], x*8+y*2),B)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <store(join(m4x4,B),m4x4_2attr)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <show(m4x4_2attr)>
{i} schema
{0} 'm4x4_2attr<attr1:int32,attr2:int32> [x=0:3,4,0,y=0:3,4,0]'

SCIDB QUERY : <scan(m4x4_2attr)>
[[(0,0),(1,2),(2,4),(3,6)],[(4,8),(5,10),(6,12),(7,14)],[(8,16),(9,18),(10,20),(11,22)],[(12,24),(13,26),(14,28),(15,30)]]

SCIDB QUERY : <SELECT max(attr1),min(attr1) FROM m4x4>
[(15,0)]

SCIDB QUERY : <create array m4x4_max_min <max:int32 NULL DEFAULT null, min:int32 NULL DEFAULT null> [i=0:0,1,0]>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <SELECT max(attr1),min(attr1) INTO m4x4_max_min FROM m4x4>
[(15,0)]

SCIDB QUERY : <show(m4x4_max_min)>
{i} schema
{0} 'm4x4_max_min<max:int32 NULL DEFAULT null,min:int32 NULL DEFAULT null> [i=0:0,1,0]'

SCIDB QUERY : <SELECT max(attr2), min(attr2) FROM m4x4_2attr>
[(30,0)]

SCIDB QUERY : <SELECT max(m4x4)>
{i} attr1_max
{0} 15

SCIDB QUERY : <aggregate(m4x4_2attr, max(attr2),min(attr1))>
[(30,0)]

SCIDB QUERY : <CREATE ARRAY m4x4_null< attr1: int32 NULL>[i=1:4,4,0, j=1:4,4,0]>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <store(build(m4x4_null,iif(i=2,0,null)),m4x4_null)>
[[(null),(null),(null),(null)],[(0),(0),(0),(0)],[(null),(null),(null),(null)],[(null),(null),(null),(null)]]

SCIDB QUERY : <SELECT count(attr1) AS a, count(*) AS b FROM m4x4_null>
{i} a,b
{0} 4,16

SCIDB QUERY : <SELECT max(attr1) FROM m4x4 GROUP BY x>
{x} max
{0} 3
{1} 7
{2} 11
{3} 15

SCIDB QUERY : <SELECT max(attr1) INTO tmp1 FROM m4x4 GROUP BY x>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <show(tmp1)>
{i} schema
{0} 'tmp1<max:int32 NULL DEFAULT null> [x=0:3,4,0]'

SCIDB QUERY : <SELECT max(attr1) FROM m4x4 GROUP BY y>
{y} max
{0} 12
{1} 13
{2} 14
{3} 15

SCIDB QUERY : <aggregate(m4x4, max(attr1), y)>
{y} attr1_max
{0} 12
{1} 13
{2} 14
{3} 15

SCIDB QUERY : < SELECT max(attr1), min(attr1) FROM m4x4 REGRID AS (PARTITION BY x 2, y 2)>
[[(5,0),(7,2)],[(13,8),(15,10)]]

SCIDB QUERY : < SELECT max(attr1), min(attr1) INTO tmp2 FROM m4x4 REGRID AS (PARTITION BY x 2, y 2)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <show(tmp2)>
{i} schema
{0} 'tmp2<max:int32 NULL DEFAULT null,min_1:int32 NULL DEFAULT null> [x=0:1,4,0,y=0:1,4,0]'

SCIDB QUERY : <regrid(m4x4, 2, 2, max(attr1), min(attr1))>
[[(5,0),(7,2)],[(13,8),(15,10)]]

SCIDB QUERY : < SELECT sum(attr1) FROM m4x4 FIXED WINDOW AS (PARTITION BY x 1 PRECEDING AND 1 FOLLOWING, y 1 PRECEDING AND 1 FOLLOWING)>
[[(10),(18),(24),(18)],[(27),(45),(54),(39)],[(51),(81),(90),(63)],[(42),(66),(72),(50)]]

SCIDB QUERY : < SELECT sum(attr1) INTO tmp3 FROM m4x4 FIXED WINDOW AS (PARTITION BY x 1 PRECEDING AND 1 FOLLOWING, y 1 PRECEDING AND 1 FOLLOWING)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <show(tmp3)>
{i} schema
{0} 'tmp3<sum:int64 NULL DEFAULT null> [x=0:3,4,0,y=0:3,4,0]'

SCIDB QUERY : <window (m4x4,1,1,1,1,sum(attr1))>
[[(10),(18),(24),(18)],[(27),(45),(54),(39)],[(51),(81),(90),(63)],[(42),(66),(72),(50)]]

SCIDB QUERY : <create array A <val:double> [i=0:3,4,0, j=0:3,4,0]>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <store(build(A,'[[(0),(),(),()],[(4),(),(6),(7)],[(8),(),(),()],[(),(13),(14),()]]',true),A)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <create array C <label:string NULL default NULL>[i=0:3,4,0, j=0:3,4,0]>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <store(build(C,NULL),C)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <create array m4x4_empty<val:double, label:string NULL>[i=0:3,4,0, j=0:3,4,0]>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <store(join(A,C),m4x4_empty)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <scan(m4x4_empty)>
[[(0,null),(),(),()],[(4,null),(),(6,null),(7,null)],[(8,null),(),(),()],[(),(13,null),(14,null),()]]

SCIDB QUERY : < SELECT sum(val) FROM m4x4_empty VARIABLE WINDOW AS (PARTITION BY i 1 PRECEDING AND 1 FOLLOWING)>
{i,j} sum
{0,0} 4
{1,0} 12
{1,2} 20
{1,3} 7
{2,0} 12
{3,1} 13
{3,2} 20

SCIDB QUERY : <variable_window(m4x4_empty, i, 1, 1, sum(val))>
[[(4),(),(),()],[(12),(),(20),(7)],[(12),(),(),()],[(),(13),(20),()]]

SCIDB QUERY : <create array event <event:string> [i=0:11,12,0]>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <create array year <year:int64>[i=0:11,12,0]>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <create array person <person:string>[i=0:11,12,0]>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <create array country <country:string>[i=0:11,12,0]>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <create array time <time:double>[i=0:11,12,0]>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <store(build(event,iif(i<4,'dash',iif(i<8,'steeplechase','marathon'))),event)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <store(build(year,1996+(i%4 * 4)),year)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <store(build(person,'[Bailey,Greene,Gatlin,Bolt,Keter,Kosgei,Kemboi,Kipruto,Thugwane,Abera,Baldini,Wanjiru]',true),person)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <store(build(country,'[Canada,USA,USA,Jamaica,Kenya,Kenya,Kenya,Kenya,USA,Ethiopia,Italy,Kenya]',true),country)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <store(build(time,'[(9.84),(9.87),(9.85),(9.69),(487.12),(503.17),(485.81),(490.34),(7956),(7811),(7855),(7596)]',true),time)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <store(join(event,join(person,join(year,join(country,time)))),winnersFlat)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <CREATE ARRAY winners <person:string,country:string,time:double> [year=1996:2008,13,0,event(string)=3,3,0]>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <redimension_store(winnersFlat, winners)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <show(winners)>
{i} schema
{0} 'winners<person:string,country:string,time:double> [year=1996:2008,13,0,event(string)=3,3,0]'

SCIDB QUERY : <SELECT * FROM winners>
{year,event} person,country,time
{1996,'dash'} 'Bailey','Canada',9.84
{1996,'marathon'} 'Thugwane','USA',7956
{1996,'steeplechase'} 'Keter','Kenya',487.12
{2000,'dash'} 'Greene','USA',9.87
{2000,'marathon'} 'Abera','Ethiopia',7811
{2000,'steeplechase'} 'Kosgei','Kenya',503.17
{2004,'dash'} 'Gatlin','USA',9.85
{2004,'marathon'} 'Baldini','Italy',7855
{2004,'steeplechase'} 'Kemboi','Kenya',485.81
{2008,'dash'} 'Bolt','Jamaica',9.69
{2008,'marathon'} 'Wanjiru','Kenya',7596
{2008,'steeplechase'} 'Kipruto','Kenya',490.34

SCIDB QUERY : <CREATE ARRAY perCountryMedalCount <medalCount: uint64 null> [country(string)=20,20,0]>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <redimension_store (winners, perCountryMedalCount, count(*) as medalCount)>
{country} medalCount
{'Canada'} 1
{'Ethiopia'} 1
{'Italy'} 1
{'Jamaica'} 1
{'Kenya'} 5
{'USA'} 3

SCIDB QUERY : <SELECT * FROM perCountryMedalCount>
{country} medalCount
{'Canada'} 1
{'Ethiopia'} 1
{'Italy'} 1
{'Jamaica'} 1
{'Kenya'} 5
{'USA'} 3

Query was executed successfully

Query was executed successfully

Query was executed successfully

Query was executed successfully

Query was executed successfully

Query was executed successfully

Query was executed successfully

Query was executed successfully

Query was executed successfully

Query was executed successfully

Query was executed successfully

Query was executed successfully

Query was executed successfully

Query was executed successfully

Query was executed successfully

Query was executed successfully

Query was executed successfully

Query was executed successfully

Query was executed successfully

