SCIDB QUERY : <create array A <a:int32 null> [x=0:7,3,2]>
Query was executed successfully

SCIDB QUERY : <store(build(A,x+10),A)>
[(10),(11),(12),(13),(14),(15),(16),(17)]

SCIDB QUERY : <update A set a=null where x=1>
[(10),(null),(12),(13),(14),(15),(16),(17)]

SCIDB QUERY : <apply(A,z,a+10)>
[(10,20),(null,null),(12,22),(13,23),(14,24),(15,25),(16,26),(17,27)]

SCIDB QUERY : <between(A,0,3)>
[(10),(null),(12),(13),(),()]

SCIDB QUERY : <cross(A,A)>
[[(10,10),(10,null),(10,12)],[(null,10),(null,null),(null,12)],[(12,10),(12,null),(12,12)]];[[(10,13),(10,14),(10,15)],[(null,13),(null,14),(null,15)],[(12,13),(12,14),(12,15)]];[[(10,16),(10,17)],[(null,16),(null,17)],[(12,16),(12,17)]];[[(13,10),(13,null),(13,12)],[(14,10),(14,null),(14,12)],[(15,10),(15,null),(15,12)]];[[(13,13),(13,14),(13,15)],[(14,13),(14,14),(14,15)],[(15,13),(15,14),(15,15)]];[[(13,16),(13,17)],[(14,16),(14,17)],[(15,16),(15,17)]];[[(16,10),(16,null),(16,12)],[(17,10),(17,null),(17,12)]];[[(16,13),(16,14),(16,15)],[(17,13),(17,14),(17,15)]];[[(16,16),(16,17)],[(17,16),(17,17)]]

SCIDB QUERY : <cross_join(A as a1,A as a2,a1.x,a2.x)>
[(10,10),(null,null),(12,12),(13,13),(14,14),(15,15),(16,16),(17,17)]

SCIDB QUERY : <concat(A,A)>
[(10),(null),(12),(13),(14),(15),(16),(17),(10),(null),(12),(13),(14),(15),(16),(17)]

SCIDB QUERY : <filter(A,x%2=1)>
[(),(null),(),(13),(),(15),(),(17)]

SCIDB QUERY : <filter(A,x%2<>1)>
[(10),(),(12),(),(14),(),(16),()]

SCIDB QUERY : <join(A,A)>
[(10,10),(null,null),(12,12),(13,13),(14,14),(15,15),(16,16),(17,17)]

SCIDB QUERY : <merge(A,A@1)>
[(10),(null),(12),(13),(14),(15),(16),(17)]

SCIDB QUERY : <merge(A@1,A)>
[(10),(11),(12),(13),(14),(15),(16),(17)]

SCIDB QUERY : <project(apply(A,z,a+10),z)>
[(20),(null),(22),(23),(24),(25),(26),(27)]

SCIDB QUERY : <reverse(A)>
[(17),(16),(15),(14),(13),(12),(null),(10)]

SCIDB QUERY : <repart(A,<a:int32 null> [x=0:7,2,0])>
[(10),(null),(12),(13),(14),(15),(16),(17)]

SCIDB QUERY : <sample(A,0.5,1)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <bernoulli(A,0.5,1)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <lookup(build(<a:int32>[x=0:2,3,0],x+1),A)>
[(null),(12),(13)]

SCIDB QUERY : <slice(A)>
[(10),(null),(12),(13),(14),(15),(16),(17)]

SCIDB QUERY : <sort(A,a desc)>
[(17),(16),(15),(14),(13),(12),(10),(null)]

SCIDB QUERY : <sort(A,a)>
[(null),(10),(12),(13),(14),(15),(16),(17)]

SCIDB QUERY : <thin(A,0,1)>
[(10),(null),(12),(13),(14),(15),(16),(17)]

SCIDB QUERY : <transpose(A)>
[(10),(null),(12),(13),(14),(15),(16),(17)]

SCIDB QUERY : <xgrid(A,2)>
[(10),(10),(null),(null),(12),(12),(13),(13),(14),(14),(15),(15),(16),(16),(17),(17)]

SCIDB QUERY : <adddim(A,z)>
[[(10),(null),(12)]];[[(13),(14),(15)]];[[(16),(17)]]

SCIDB QUERY : <deldim(adddim(A,z))>
[(10),(null),(12),(13),(14),(15),(16),(17)]

SCIDB QUERY : <cast(A,<z:int32 null> [y=0:7,3,2])>
[(10),(null),(12),(13),(14),(15),(16),(17)]

SCIDB QUERY : <remove(A)>
Query was executed successfully

