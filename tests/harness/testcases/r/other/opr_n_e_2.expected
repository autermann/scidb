SCIDB QUERY : <create empty array A <a:int32 null> [x=0:7,3,2]>
Query was executed successfully

SCIDB QUERY : <store(build_sparse(A,x+10,x<>2 and x<>5),A)>
[{0}(10),{1}(11)];
[{3}(13),{4}(14)];
[{6}(16),{7}(17)]

SCIDB QUERY : <update A set a=null where x=1>
[{0}(10)];
[{3}(13),{4}(14)];
[{6}(16),{7}(17)]

SCIDB QUERY : <apply(A,z,a+10)>
[{0}(10,20),{1}(null,null),{2}()];
[{3}(13,23),{4}(14,24),{5}()];
[{6}(16,26),{7}(17,27)]

SCIDB QUERY : <between(A,0,3)>
[{0}(10)];
[{3}(13)]

SCIDB QUERY : <cross(A,A)>
[[{0,0}(10,10),{0,1}(10,null),{0,2}(),{1,0}(null,10),{1,1}(null,null),{1,2}(),{2,0}(),{2,1}(),{2,2}()]];
[[{0,3}(10,13),{0,4}(10,14),{0,5}(),{1,3}(null,13),{1,4}(null,14),{1,5}(),{2,3}(),{2,4}(),{2,5}()]];
[[{0,6}(10,16),{0,7}(10,17),{1,6}(null,16),{1,7}(null,17),{2,6}(),{2,7}()]];
[[{3,0}(13,10),{3,1}(13,null),{3,2}(),{4,0}(14,10),{4,1}(14,null),{4,2}(),{5,0}(),{5,1}(),{5,2}()]];
[[{3,3}(13,13),{3,4}(13,14),{3,5}(),{4,3}(14,13),{4,4}(14,14),{4,5}(),{5,3}(),{5,4}(),{5,5}()]];
[[{3,6}(13,16),{3,7}(13,17),{4,6}(14,16),{4,7}(14,17),{5,6}(),{5,7}()]];
[[{6,0}(16,10),{6,1}(16,null),{6,2}(),{7,0}(17,10),{7,1}(17,null),{7,2}()]];
[[{6,3}(16,13),{6,4}(16,14),{6,5}(),{7,3}(17,13),{7,4}(17,14),{7,5}()]];
[[{6,6}(16,16),{6,7}(16,17),{7,6}(17,16),{7,7}(17,17)]]

SCIDB QUERY : <cross_join(A as a1,A as a2,a1.x,a2.x)>
[{0}(10,10),{1}(null,null),{2}()];
[{3}(13,13),{4}(14,14),{5}()];
[{6}(16,16),{7}(17,17)]

SCIDB QUERY : <concat(A,A)>
[{0}(10)];
[{3}(13),{4}(14)];
[{6}(16),{7}(17),{8}(10)];
[{11}(13)];
[{12}(14),{14}(16)];
[{15}(17)]

SCIDB QUERY : <filter(A,x%2=1)>
[{3}(13)];
[{7}(17)]

SCIDB QUERY : <filter(A,x%2<>1)>
[{0}(10)];
[{4}(14)];
[{6}(16)]

SCIDB QUERY : <join(A,A)>
[{0}(10,10),{1}(null,null),{2}()];
[{3}(13,13),{4}(14,14),{5}()];
[{6}(16,16),{7}(17,17)]

SCIDB QUERY : <merge(A,A@1)>
[{0}(10)];
[{3}(13),{4}(14)];
[{6}(16),{7}(17)]

SCIDB QUERY : <merge(A@1,A)>
[{0}(10),{1}(11)];
[{3}(13),{4}(14)];
[{6}(16),{7}(17)]

SCIDB QUERY : <project(apply(A,z,a+10),z)>
[{0}(20)];
[{3}(23),{4}(24)];
[{6}(26),{7}(27)]

SCIDB QUERY : <reverse(A)>
[{0}(17),{1}(16)];
[{3}(14),{4}(13)];
[{7}(10)]

SCIDB QUERY : <repart(A,<a:int32 null> [x=0:7,2,0])>
[{0}(10)];
[{3}(13)];
[{4}(14)];
[{6}(16),{7}(17)]

SCIDB QUERY : <sample(A,0.5,1)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <bernoulli(A,0.5,1)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <lookup(build(<a:int32>[x=0:2,3,0],x+1),A)>
[(null),(),(13)]

SCIDB QUERY : <slice(A)>
[{0}(10)];
[{3}(13),{4}(14)];
[{6}(16),{7}(17)]

SCIDB QUERY : <sort(A,a desc)>
[(17),(16),(14),(13),(10),(null)]

SCIDB QUERY : <sort(A,a)>
[(null),(10),(13),(14),(16),(17)]

SCIDB QUERY : <thin(A,0,1)>
[{0}(10)];
[{3}(13),{4}(14)];
[{6}(16),{7}(17)]

SCIDB QUERY : <transpose(A)>
[{0}(10)];
[{3}(13),{4}(14)];
[{6}(16),{7}(17)]

SCIDB QUERY : <xgrid(A,2)>
[{0}(10),{1}(10)];
[{6}(13),{7}(13),{8}(14),{9}(14)];
[{12}(16),{13}(16),{14}(17),{15}(17)]

SCIDB QUERY : <adddim(A,z)>
[[{0,0}(10)]];
[[{0,3}(13),{0,4}(14)]];
[[{0,6}(16),{0,7}(17)]]

SCIDB QUERY : <deldim(adddim(A,z))>
[{0}(10)];
[{3}(13),{4}(14)];
[{6}(16),{7}(17)]

SCIDB QUERY : <cast(A,empty <z:int32 null> [y=0:7,3,2])>
[{0}(10)];
[{3}(13),{4}(14)];
[{6}(16),{7}(17)]

SCIDB QUERY : <remove(A)>
Query was executed successfully

