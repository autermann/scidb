SCIDB QUERY : <create array A <a:int32 null> [x=-2:8,5,0]>
Query was executed successfully

SCIDB QUERY : <store(build(A,x+10),A)>
[(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18)]

SCIDB QUERY : <update A set a=null where x=1>
[(8),(9),(10),(null),(12),(13),(14),(15),(16),(17),(18)]

SCIDB QUERY : <apply(A,z,a+10)>
[(8,18),(9,19),(10,20),(null,null),(12,22),(13,23),(14,24),(15,25),(16,26),(17,27),(18,28)]

SCIDB QUERY : <between(A,0,3)>
[(),(),(10),(null),(12),(13),(),(),(),()]

SCIDB QUERY : <cross(A,A)>
[[(8,8),(8,9),(8,10),(8,null),(8,12)],[(9,8),(9,9),(9,10),(9,null),(9,12)],[(10,8),(10,9),(10,10),(10,null),(10,12)],[(null,8),(null,9),(null,10),(null,null),(null,12)],[(12,8),(12,9),(12,10),(12,null),(12,12)]];[[(8,13),(8,14),(8,15),(8,16),(8,17)],[(9,13),(9,14),(9,15),(9,16),(9,17)],[(10,13),(10,14),(10,15),(10,16),(10,17)],[(null,13),(null,14),(null,15),(null,16),(null,17)],[(12,13),(12,14),(12,15),(12,16),(12,17)]];[[(8,18)],[(9,18)],[(10,18)],[(null,18)],[(12,18)]];[[(13,8),(13,9),(13,10),(13,null),(13,12)],[(14,8),(14,9),(14,10),(14,null),(14,12)],[(15,8),(15,9),(15,10),(15,null),(15,12)],[(16,8),(16,9),(16,10),(16,null),(16,12)],[(17,8),(17,9),(17,10),(17,null),(17,12)]];[[(13,13),(13,14),(13,15),(13,16),(13,17)],[(14,13),(14,14),(14,15),(14,16),(14,17)],[(15,13),(15,14),(15,15),(15,16),(15,17)],[(16,13),(16,14),(16,15),(16,16),(16,17)],[(17,13),(17,14),(17,15),(17,16),(17,17)]];[[(13,18)],[(14,18)],[(15,18)],[(16,18)],[(17,18)]];[[(18,8),(18,9),(18,10),(18,null),(18,12)]];[[(18,13),(18,14),(18,15),(18,16),(18,17)]];[[(18,18)]]

SCIDB QUERY : <cross_join(A as a1,A as a2,a1.x,a2.x)>
[(8,8),(9,9),(10,10),(null,null),(12,12),(13,13),(14,14),(15,15),(16,16),(17,17),(18,18)]

SCIDB QUERY : <concat(A,A)>
[(8),(9),(10),(null),(12),(13),(14),(15),(16),(17),(18),(8),(9),(10),(null),(12),(13),(14),(15),(16),(17),(18)]

SCIDB QUERY : <filter(A,x%2=1)>
[(),(),(),(null),(),(13),(),(15),(),(17),()]

SCIDB QUERY : <filter(A,x%2<>1)>
[(8),(9),(10),(),(12),(),(14),(),(16),(),(18)]

SCIDB QUERY : <join(A,A)>
[(8,8),(9,9),(10,10),(null,null),(12,12),(13,13),(14,14),(15,15),(16,16),(17,17),(18,18)]

SCIDB QUERY : <merge(A,A@1)>
[(8),(9),(10),(null),(12),(13),(14),(15),(16),(17),(18)]

SCIDB QUERY : <merge(A@1,A)>
[(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18)]

SCIDB QUERY : <project(apply(A,z,a+10),z)>
[(18),(19),(20),(null),(22),(23),(24),(25),(26),(27),(28)]

SCIDB QUERY : <reverse(A)>
[(18),(17),(16),(15),(14),(13),(12),(null),(10),(9),(8)]

SCIDB QUERY : <repart(A,<a:int32 null> [x=-2:8,2,0])>
[(8),(9),(10),(null),(12),(13),(14),(15),(16),(17),(18)]

SCIDB QUERY : <sample(A,0.5,1)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <bernoulli(A,0.5,1)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <lookup(build(<a:int32>[x=0:2,3,0],x+1),A)>
[(null),(12),(13)]

SCIDB QUERY : <slice(A)>
[(8),(9),(10),(null),(12),(13),(14),(15),(16),(17),(18)]

SCIDB QUERY : <sort(A,a desc)>
[(18),(17),(16),(15),(14),(13),(12),(10),(9),(8),(null)]

SCIDB QUERY : <sort(A,a)>
[(null),(8),(9),(10),(12),(13),(14),(15),(16),(17),(18)]

SCIDB QUERY : <store(build(A,iif(x=3,null,x+10)),A)>
[(8),(9),(10),(11),(12),(null),(14),(15),(16),(17),(18)]

SCIDB QUERY : <thin(A,-2,5)>
[(8),(null),(18)]

SCIDB QUERY : <transpose(A)>
[(8),(9),(10),(11),(12),(null),(14),(15),(16),(17),(18)]

SCIDB QUERY : <xgrid(A,2)>
[(8),(8),(9),(9),(10),(10),(11),(11),(12),(12),(null),(null),(14),(14),(15),(15),(16),(16),(17),(17),(18),(18)]

SCIDB QUERY : <adddim(A,z)>
[[(8),(9),(10),(11),(12)]];[[(null),(14),(15),(16),(17)]];[[(18)]]

SCIDB QUERY : <deldim(adddim(A,z))>
[(8),(9),(10),(11),(12),(null),(14),(15),(16),(17),(18)]

SCIDB QUERY : <cast(A,<z:int32 null> [y=-2:8,5,0])>
[(8),(9),(10),(11),(12),(null),(14),(15),(16),(17),(18)]

SCIDB QUERY : <remove(A)>
Query was executed successfully

